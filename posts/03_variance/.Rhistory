group_by(ticker) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, volatility) |>
distinct() |>
arrange(desc(volatility))
#| echo: false
#| message: false
#| warning: false
library("ggtext")
library("gt")
library("tidyverse")
dow_df <- readr::read_csv("DOW30.csv")
A <- seq(-3, 3)
B <- seq(-9, 9, by = 3)
mean(A)
mean(B)
median(A)
median(B)
#| echo: false
#| eval: true
simple_df <- data.frame(A,B)
title_string <- "Compare and Contrast: <span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>"
simple_df |>
ggplot() +
geom_point(aes(x = A, y = 1), color = "blue", size = 10) +
geom_point(aes(x = B, y = 2), color = "red", size = 10) +
labs(title = title_string,
subtitle = "What is alike?  What is different?",
caption = "SML 201",
x = "", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(),
plot.title = element_markdown(face = "bold", hjust = 0.5,size = 20),
plot.subtitle = element_markdown(hjust = 0.5,size = 15)) +
ylim(0,3)
# range in R computes min and max values
range(A)
range(B)
# range in statistics
diff(range(A))
diff(range(B))
H <- c(75,76,63,62,58)
xbar <- mean(H)
deviations <- H - xbar
deviations
sq_deviations <- deviations^2
sq_deviations
#| echo: false
#| eval: true
hot_dog_data <- data.frame(hot_dogs = c(75,76,63,62,58))
hot_dog_data |>
mutate(xbar = mean(hot_dogs, na.rm = TRUE),
deviations = hot_dogs - xbar,
sq_deviations = deviations^2) |>
gt() |>
cols_align(align = "center") |>
tab_footnote(footnote = "Men's competition") |>
tab_header(
title = "Nathan's Hot Dog Eating Contest",
subtitle = "Recent winning amounts") |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels()
)
#| echo: false
#| eval: true
hot_dog_data <- data.frame(hot_dogs = c(75,76,63,62,58))
hot_dog_data |>
mutate(xbar = mean(hot_dogs, na.rm = TRUE),
deviations = hot_dogs - xbar,
sq_deviations = paste(round(deviations^2,2),
"(hot dogs)^2")) |>
gt() |>
cols_align(align = "center") |>
tab_footnote(footnote = "Men's competition") |>
tab_header(
title = "Nathan's Hot Dog Eating Contest",
subtitle = "Recent winning amounts") |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(color = "red"),
locations = cells_body(columns = sq_deviations)
)
var(A)
var(B)
sd(A)
sd(B)
#| echo: false
#| eval: true
simple_df <- data.frame(A,B)
title_string <- "<span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>"
subtitle_string <- "<span style='color:blue'>Var(A) = 4.6667</span>, <span style='color:red'>Var(B) = 42</span>"
simple_df |>
ggplot() +
geom_point(aes(x = A, y = 1), color = "blue", size = 10) +
geom_point(aes(x = B, y = 2), color = "red", size = 10) +
labs(title = title_string,
subtitle = subtitle_string,
caption = "SML 201",
x = "", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(),
plot.title = element_markdown(face = "bold", hjust = 0.5,size = 25),
plot.subtitle = element_markdown(hjust = 0.5,size = 20)) +
ylim(0,3)
#| echo: false
#| eval: true
simple_df <- data.frame(A,B)
title_string <- "<span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>"
subtitle_string <- "<span style='color:blue'>SD(A) = 2.1602</span>, <span style='color:red'>SD(B) = 6.4807</span>"
simple_df |>
ggplot() +
geom_point(aes(x = A, y = 1), color = "blue", size = 10) +
geom_point(aes(x = B, y = 2), color = "red", size = 10) +
labs(title = title_string,
subtitle = subtitle_string,
caption = "SML 201",
x = "", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(),
plot.title = element_markdown(face = "bold", hjust = 0.5,size = 25),
plot.subtitle = element_markdown(hjust = 0.5,size = 20)) +
ylim(0,3)
Ledecky_df <- data.frame(
place = c(1, 2, 3, 4, 5, 6, 7, 8),
times800 = c(491, 492, 493, 495, 498, 502, 503, 503),
times1500 = c(930, 941, 941, 944, 961, 963, 964, 973))
xbar <- mean(Ledecky_df$times800)
s <- sd(Ledecky_df$times800)
z1 <- (491 - xbar) / s
xbar <- mean(Ledecky_df$times1500)
s <- sd(Ledecky_df$times1500)
z2 <- (930 - xbar) / s
cvals <- seq(58, 76)
SSE <- rep(NA, length(cvals))
for(i in 1:length(cvals)){
SSE[i] <- sum((H - cvals[i])^{2})
}
min(SSE)
cvals[which.min(SSE)]
cvals <- seq(58, 76, by = 0.1)
SSE <- rep(NA, length(cvals))
for(i in 1:length(cvals)){
SSE[i] <- sum((H - cvals[i])^{2})
}
min(SSE)
cvals[which.min(SSE)]
mean(H)
cvals <- seq(58, 76, by = 0.1)
SE <- rep(NA, length(cvals))
for(i in 1:length(cvals)){
SE[i] <- sum(abs(H - cvals[i]))
}
min(SE)
cvals[which.min(SE)]
median(H)
#| message: false
dow_df <- readr::read_csv("https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/03_variance/DOW30.csv")
head(dow_df)
str(dow_df, give.attr = FALSE)
colnames(dow_df)
table(dow_df$ticker)
dow_df |>
group_by(ticker) |>
mutate(avg_price = mean(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, avg_price) |>
distinct() |>
arrange(desc(avg_price))
dow_df |>
group_by(ticker) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, volatility) |>
distinct() |>
arrange(desc(volatility))
sessionInfo()
dow_df |>
group_by(ticker) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, volatility) |>
distinct() |>
arrange(volatility)
dow_df |>
group_by(ticker) |>
mutate(avg_price = mean(price_close, na.rm = TRUE)) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, avg_price, volatility) |>
distinct() |>
mutate(coef_var = avg_price / volatility) |>
arrange(desc(coef_var))
dow_df |>
group_by(ticker) |>
mutate(avg_price = mean(price_close, na.rm = TRUE)) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, avg_price, volatility) |>
distinct() |>
mutate(coef_var = volatility / avg_price) |>
arrange(desc(coef_var))
dow_df |>
filter(ticker == "VZ") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Verizon stock",
subtitle = "2024 YTD",
caption = "SML 201")
dow_df |>
filter(ticker == "GS") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Verizon stock",
subtitle = "2024 YTD",
caption = "SML 201")
dow_df |>
filter(ticker == "GS") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Goldman Sachs stock",
subtitle = "2024 YTD",
caption = "SML 201")
dow_df |>
filter(ticker == "VZ") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Verizon stock",
subtitle = "2024 YTD",
caption = "SML 201")
dow_df |>
filter(ticker == "VZ") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Verizon stock",
subtitle = "2024 YTD",
caption = "SML 201")
+ xlim(0,500)
dow_df |>
filter(ticker == "VZ") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Verizon stock",
subtitle = "2024 YTD",
caption = "SML 201") + xlim(0,500)
#| echo: false
#| message: false
#| warning: false
library("ggtext")
library("gt")
library("tidyverse")
dow_df <- readr::read_csv("DOW30.csv")
A <- seq(-3, 3)
B <- seq(-9, 9, by = 3)
mean(A)
mean(B)
median(A)
median(B)
#| echo: false
#| eval: true
simple_df <- data.frame(A,B)
title_string <- "Compare and Contrast: <span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>"
simple_df |>
ggplot() +
geom_point(aes(x = A, y = 1), color = "blue", size = 10) +
geom_point(aes(x = B, y = 2), color = "red", size = 10) +
labs(title = title_string,
subtitle = "What is alike?  What is different?",
caption = "SML 201",
x = "", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(),
plot.title = element_markdown(face = "bold", hjust = 0.5,size = 20),
plot.subtitle = element_markdown(hjust = 0.5,size = 15)) +
ylim(0,3)
# range in R computes min and max values
range(A)
range(B)
# range in statistics
diff(range(A))
diff(range(B))
H <- c(75,76,63,62,58)
xbar <- mean(H)
deviations <- H - xbar
deviations
sq_deviations <- deviations^2
sq_deviations
#| echo: false
#| eval: true
hot_dog_data <- data.frame(hot_dogs = c(75,76,63,62,58))
hot_dog_data |>
mutate(xbar = mean(hot_dogs, na.rm = TRUE),
deviations = hot_dogs - xbar,
sq_deviations = deviations^2) |>
gt() |>
cols_align(align = "center") |>
tab_footnote(footnote = "Men's competition") |>
tab_header(
title = "Nathan's Hot Dog Eating Contest",
subtitle = "Recent winning amounts") |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels()
)
#| echo: false
#| eval: true
hot_dog_data <- data.frame(hot_dogs = c(75,76,63,62,58))
hot_dog_data |>
mutate(xbar = mean(hot_dogs, na.rm = TRUE),
deviations = hot_dogs - xbar,
sq_deviations = paste(round(deviations^2,2),
"(hot dogs)^2")) |>
gt() |>
cols_align(align = "center") |>
tab_footnote(footnote = "Men's competition") |>
tab_header(
title = "Nathan's Hot Dog Eating Contest",
subtitle = "Recent winning amounts") |>
tab_style(
style = cell_text(weight = "bold"),
locations = cells_column_labels()
) |>
tab_style(
style = cell_text(color = "red"),
locations = cells_body(columns = sq_deviations)
)
var(A)
var(B)
sd(A)
sd(B)
#| echo: false
#| eval: true
simple_df <- data.frame(A,B)
title_string <- "<span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>"
subtitle_string <- "<span style='color:blue'>Var(A) = 4.6667</span>, <span style='color:red'>Var(B) = 42</span>"
simple_df |>
ggplot() +
geom_point(aes(x = A, y = 1), color = "blue", size = 10) +
geom_point(aes(x = B, y = 2), color = "red", size = 10) +
labs(title = title_string,
subtitle = subtitle_string,
caption = "SML 201",
x = "", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(),
plot.title = element_markdown(face = "bold", hjust = 0.5,size = 25),
plot.subtitle = element_markdown(hjust = 0.5,size = 20)) +
ylim(0,3)
#| echo: false
#| eval: true
simple_df <- data.frame(A,B)
title_string <- "<span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>"
subtitle_string <- "<span style='color:blue'>SD(A) = 2.1602</span>, <span style='color:red'>SD(B) = 6.4807</span>"
simple_df |>
ggplot() +
geom_point(aes(x = A, y = 1), color = "blue", size = 10) +
geom_point(aes(x = B, y = 2), color = "red", size = 10) +
labs(title = title_string,
subtitle = subtitle_string,
caption = "SML 201",
x = "", y = "") +
theme_minimal() +
theme(axis.text.y = element_blank(),
plot.title = element_markdown(face = "bold", hjust = 0.5,size = 25),
plot.subtitle = element_markdown(hjust = 0.5,size = 20)) +
ylim(0,3)
Ledecky_df <- data.frame(
place = c(1, 2, 3, 4, 5, 6, 7, 8),
times800 = c(491, 492, 493, 495, 498, 502, 503, 503),
times1500 = c(930, 941, 941, 944, 961, 963, 964, 973))
xbar <- mean(Ledecky_df$times800)
s <- sd(Ledecky_df$times800)
z1 <- (491 - xbar) / s
xbar <- mean(Ledecky_df$times1500)
s <- sd(Ledecky_df$times1500)
z2 <- (930 - xbar) / s
cvals <- seq(58, 76)
SSE <- rep(NA, length(cvals))
for(i in 1:length(cvals)){
SSE[i] <- sum((H - cvals[i])^{2})
}
min(SSE)
cvals[which.min(SSE)]
cvals <- seq(58, 76, by = 0.1)
SSE <- rep(NA, length(cvals))
for(i in 1:length(cvals)){
SSE[i] <- sum((H - cvals[i])^{2})
}
min(SSE)
cvals[which.min(SSE)]
mean(H)
cvals <- seq(58, 76, by = 0.1)
SE <- rep(NA, length(cvals))
for(i in 1:length(cvals)){
SE[i] <- sum(abs(H - cvals[i]))
}
min(SE)
cvals[which.min(SE)]
median(H)
#| message: false
dow_df <- readr::read_csv("https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/03_variance/DOW30.csv")
head(dow_df)
str(dow_df, give.attr = FALSE)
colnames(dow_df)
table(dow_df$ticker)
dow_df |>
filter(ticker == "VZ") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Verizon stock",
subtitle = "2024 YTD",
caption = "SML 201")
dow_df |>
filter(ticker == "GS") |>
ggplot(aes(x = price_close)) +
geom_histogram() +
labs(title = "Goldman Sachs stock",
subtitle = "2024 YTD",
caption = "SML 201")
dow_df |>
group_by(ticker) |>
mutate(avg_price = mean(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, avg_price) |>
distinct() |>
arrange(desc(avg_price))
dow_df |>
group_by(ticker) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, volatility) |>
distinct() |>
arrange(desc(volatility))
dow_df |>
group_by(ticker) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, volatility) |>
distinct() |>
arrange(volatility)
# dow_df |>
#   ggplot() +
#   geom_line(aes(x = ))
dow_df |>
group_by(ticker) |>
mutate(avg_price = mean(price_close, na.rm = TRUE)) |>
mutate(volatility = sd(price_close, na.rm = TRUE)) |>
ungroup() |>
select(ticker, avg_price, volatility) |>
distinct() |>
mutate(coef_var = volatility / avg_price) |>
arrange(desc(coef_var))
sessionInfo()
colnames(dow_df)
dow_df |>
ggplot() +
geom_line(aes(x = ref_date, y = price_close),
data = dow_df |> filter(ticker == "VZ"))
dow_df |>
ggplot() +
geom_line(aes(x = ref_date, y = price_close),
data = dow_df |> filter(ticker == "VZ")) +
geom_line(aes(x = ref_date, y = price_close),
data = dow_df |> filter(ticker == "GS")) +
dow_df |>
ggplot() +
geom_line(aes(x = ref_date, y = price_close),
data = dow_df |> filter(ticker == "VZ")) +
geom_line(aes(x = ref_date, y = price_close),
data = dow_df |> filter(ticker == "GS"))
dow_df |>
ggplot() +
geom_line(aes(x = ref_date, y = price_close),
color = "blue", linewidth = 2,
data = dow_df |> filter(ticker == "VZ")) +
geom_line(aes(x = ref_date, y = price_close),
color = "red", linewidth = 3,
data = dow_df |> filter(ticker == "GS"))
dow_df |>
ggplot() +
geom_line(aes(x = ref_date, y = price_close),
color = "blue", linewidth = 2,
data = dow_df |> filter(ticker == "VZ")) +
geom_line(aes(x = ref_date, y = price_close),
color = "red", linewidth = 3,
data = dow_df |> filter(ticker == "GS")) +
theme_minimal()
title_string <- "<span style='color:blue'>Verizon</span> and <span style='color:red'>Goldman Sachs</span>"
subtitle_string <- "stock prices"
dow_df |>
ggplot() +
geom_line(aes(x = ref_date, y = price_close),
color = "blue", linewidth = 2,
data = dow_df |> filter(ticker == "VZ")) +
geom_line(aes(x = ref_date, y = price_close),
color = "red", linewidth = 3,
data = dow_df |> filter(ticker == "GS")) +
labs(title = title_string,
subtitle = subtitle_string,
caption = "SML 201",
x = "date", y = "closing price") +
theme_minimal() +
theme(plot.title = element_markdown(face = "bold", hjust = 0.5,size = 25),
plot.subtitle = element_markdown(hjust = 0.5,size = 20))
summary(dow_df$price_close)
dow_df <- dow_df |>
mutate(price_scaled = scale(price_close)) #z-scores
summary(dow_df$price_scaled)
