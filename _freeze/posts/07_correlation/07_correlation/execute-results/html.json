{
  "hash": "0c025cd4fdeba4ce0278e147b4ee4de4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"7: Correlation\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-09-24\"\nformat:\n  html:\n    toc: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"corrplot\")\nlibrary(\"gt\")\nlibrary(\"tidyverse\") #tools for data wrangling and visualization\n\ncorrelatedValues = function(x, r = 0.9){\n  r2 = r**2\n  ve = 1-r2\n  SD = sqrt(ve)\n  e  = rnorm(length(x), mean=0, sd=SD)\n  y  = r*x + e\n  return(y)\n}\njudging_categories <- c(\"aroma\", \"flavor\", \"aftertaste\", \"acidity\", \"body\", \"balance\", \"uniformity\", \"clean_cup\", \"sweetness\")\n\nx1 = rnorm(100, mean = -6, sd = 1)\ny1 = correlatedValues(x1, r = 0.75) + 6\nx2 = rnorm(100, mean = -3, sd = 1)\ny2 = correlatedValues(x2, r = 0.75) + 3\nx3 = rnorm(100, mean = 0, sd = 1)\ny3 = correlatedValues(x3, r = 0.75)\nx4 = rnorm(100, mean = 3, sd = 1)\ny4 = correlatedValues(x4, r = 0.75) - 3\nx5 = rnorm(100, mean = 6, sd = 1)\ny5 = correlatedValues(x5, r = 0.75) - 6\n\ndf1 <- data.frame(x1, y1, \"group 1\")\ndf2 <- data.frame(x2, y2, \"group 2\")\ndf3 <- data.frame(x3, y3, \"group 3\")\ndf4 <- data.frame(x4, y4, \"group 4\")\ndf5 <- data.frame(x5, y5, \"group 5\")\nnames(df1) <- c(\"xdata\", \"ydata\", \"group\")\nnames(df2) <- c(\"xdata\", \"ydata\", \"group\")\nnames(df3) <- c(\"xdata\", \"ydata\", \"group\")\nnames(df4) <- c(\"xdata\", \"ydata\", \"group\")\nnames(df5) <- c(\"xdata\", \"ydata\", \"group\")\ndemo_df <- rbind(df1, df2, df3, df4, df5)\n```\n:::\n\n\n\n# SML 201\n\n## Start\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n* **Goal**: Explore covariance\n\n* **Objective**: Compute interquartile ranges and correlations\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"60%\"}\n![correlation](xkcd552.png)\n\n* image source: [XKCD](https://xkcd.com/552/)\n:::\n\n::::\n\n## Data\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* Coffee Ratings\n* source: [Coffee Quality Database](https://github.com/jldbc/coffee-quality-database)\n* host: [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-07-07/readme.md) --- July 7, 2020\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n# coffee_df <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')\ncoffee_df <- readr::read_csv(\"coffee_ratings.csv\")\n```\n:::\n\n:::\n\n::::\n\n\n# Quantiles\n\n## Numerical Variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(coffee_df, give.attr = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [1,339 × 43] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ total_cup_points     : num [1:1339] 90.6 89.9 89.8 89 88.8 ...\n $ species              : chr [1:1339] \"Arabica\" \"Arabica\" \"Arabica\" \"Arabica\" ...\n $ owner                : chr [1:1339] \"metad plc\" \"metad plc\" \"grounds for health admin\" \"yidnekachew dabessa\" ...\n $ country_of_origin    : chr [1:1339] \"Ethiopia\" \"Ethiopia\" \"Guatemala\" \"Ethiopia\" ...\n $ farm_name            : chr [1:1339] \"metad plc\" \"metad plc\" \"san marcos barrancas \\\"san cristobal cuch\" \"yidnekachew dabessa coffee plantation\" ...\n $ lot_number           : chr [1:1339] NA NA NA NA ...\n $ mill                 : chr [1:1339] \"metad plc\" \"metad plc\" NA \"wolensu\" ...\n $ ico_number           : chr [1:1339] \"2014/2015\" \"2014/2015\" NA NA ...\n $ company              : chr [1:1339] \"metad agricultural developmet plc\" \"metad agricultural developmet plc\" NA \"yidnekachew debessa coffee plantation\" ...\n $ altitude             : chr [1:1339] \"1950-2200\" \"1950-2200\" \"1600 - 1800 m\" \"1800-2200\" ...\n $ region               : chr [1:1339] \"guji-hambela\" \"guji-hambela\" NA \"oromia\" ...\n $ producer             : chr [1:1339] \"METAD PLC\" \"METAD PLC\" NA \"Yidnekachew Dabessa Coffee Plantation\" ...\n $ number_of_bags       : num [1:1339] 300 300 5 320 300 100 100 300 300 50 ...\n $ bag_weight           : chr [1:1339] \"60 kg\" \"60 kg\" \"1\" \"60 kg\" ...\n $ in_country_partner   : chr [1:1339] \"METAD Agricultural Development plc\" \"METAD Agricultural Development plc\" \"Specialty Coffee Association\" \"METAD Agricultural Development plc\" ...\n $ harvest_year         : chr [1:1339] \"2014\" \"2014\" NA \"2014\" ...\n $ grading_date         : chr [1:1339] \"April 4th, 2015\" \"April 4th, 2015\" \"May 31st, 2010\" \"March 26th, 2015\" ...\n $ owner_1              : chr [1:1339] \"metad plc\" \"metad plc\" \"Grounds for Health Admin\" \"Yidnekachew Dabessa\" ...\n $ variety              : chr [1:1339] NA \"Other\" \"Bourbon\" NA ...\n $ processing_method    : chr [1:1339] \"Washed / Wet\" \"Washed / Wet\" NA \"Natural / Dry\" ...\n $ aroma                : num [1:1339] 8.67 8.75 8.42 8.17 8.25 8.58 8.42 8.25 8.67 8.08 ...\n $ flavor               : num [1:1339] 8.83 8.67 8.5 8.58 8.5 8.42 8.5 8.33 8.67 8.58 ...\n $ aftertaste           : num [1:1339] 8.67 8.5 8.42 8.42 8.25 8.42 8.33 8.5 8.58 8.5 ...\n $ acidity              : num [1:1339] 8.75 8.58 8.42 8.42 8.5 8.5 8.5 8.42 8.42 8.5 ...\n $ body                 : num [1:1339] 8.5 8.42 8.33 8.5 8.42 8.25 8.25 8.33 8.33 7.67 ...\n $ balance              : num [1:1339] 8.42 8.42 8.42 8.25 8.33 8.33 8.25 8.5 8.42 8.42 ...\n $ uniformity           : num [1:1339] 10 10 10 10 10 10 10 10 9.33 10 ...\n $ clean_cup            : num [1:1339] 10 10 10 10 10 10 10 10 10 10 ...\n $ sweetness            : num [1:1339] 10 10 10 10 10 10 10 9.33 9.33 10 ...\n $ cupper_points        : num [1:1339] 8.75 8.58 9.25 8.67 8.58 8.33 8.5 9 8.67 8.5 ...\n $ moisture             : num [1:1339] 0.12 0.12 0 0.11 0.12 0.11 0.11 0.03 0.03 0.1 ...\n $ category_one_defects : num [1:1339] 0 0 0 0 0 0 0 0 0 0 ...\n $ quakers              : num [1:1339] 0 0 0 0 0 0 0 0 0 0 ...\n $ color                : chr [1:1339] \"Green\" \"Green\" NA \"Green\" ...\n $ category_two_defects : num [1:1339] 0 1 0 2 2 1 0 0 0 4 ...\n $ expiration           : chr [1:1339] \"April 3rd, 2016\" \"April 3rd, 2016\" \"May 31st, 2011\" \"March 25th, 2016\" ...\n $ certification_body   : chr [1:1339] \"METAD Agricultural Development plc\" \"METAD Agricultural Development plc\" \"Specialty Coffee Association\" \"METAD Agricultural Development plc\" ...\n $ certification_address: chr [1:1339] \"309fcf77415a3661ae83e027f7e5f05dad786e44\" \"309fcf77415a3661ae83e027f7e5f05dad786e44\" \"36d0d00a3724338ba7937c52a378d085f2172daa\" \"309fcf77415a3661ae83e027f7e5f05dad786e44\" ...\n $ certification_contact: chr [1:1339] \"19fef5a731de2db57d16da10287413f5f99bc2dd\" \"19fef5a731de2db57d16da10287413f5f99bc2dd\" \"0878a7d4b9d35ddbf0fe2ce69a2062cceb45a660\" \"19fef5a731de2db57d16da10287413f5f99bc2dd\" ...\n $ unit_of_measurement  : chr [1:1339] \"m\" \"m\" \"m\" \"m\" ...\n $ altitude_low_meters  : num [1:1339] 1950 1950 1600 1800 1950 ...\n $ altitude_high_meters : num [1:1339] 2200 2200 1800 2200 2200 NA NA 1700 1700 1850 ...\n $ altitude_mean_meters : num [1:1339] 2075 2075 1700 2000 2075 ...\n```\n\n\n:::\n:::\n\n\nRecall that we can use `summary` on a numerical variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(coffee_df$total_cup_points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00   81.08   82.50   82.09   83.67   90.58 \n```\n\n\n:::\n:::\n\n\nThe `dplyr` way to compute quantiles includes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  summarize(min = min(total_cup_points, na.rm = TRUE),\n            q25 = quantile(total_cup_points, 0.25, na.rm = TRUE),\n            q50 = quantile(total_cup_points, 0.50, na.rm = TRUE),\n            q75 = quantile(total_cup_points, 0.75, na.rm = TRUE),\n            max = max(total_cup_points, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 5\n    min   q25   q50   q75   max\n  <dbl> <dbl> <dbl> <dbl> <dbl>\n1     0  81.1  82.5  83.7  90.6\n```\n\n\n:::\n:::\n\nWe can verify that about 50% of the data are below the median value\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(coffee_df$total_cup_points < \n       median(coffee_df$total_cup_points))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4899178\n```\n\n\n:::\n:::\n\n\n\nWe can verify that about 75% of the data are indeed below that value for the 0.75 quantile (i.e. 75th percentile.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(coffee_df$total_cup_points < 83.67)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7490665\n```\n\n\n:::\n:::\n\n\nThe *interquartile range* is the 75th percentile minus the 25th percentile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(coffee_df$total_cup_points)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00   81.08   82.50   82.09   83.67   90.58 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nIQR(coffee_df$total_cup_points, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.59\n```\n\n\n:::\n:::\n\n\n\n## Categorical Group\n\nThe `dplyr` code is easily adaptable to grouped data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  group_by(species) |>\n  summarize(min = min(total_cup_points, na.rm = TRUE),\n            q25 = quantile(total_cup_points, 0.25, na.rm = TRUE),\n            q50 = quantile(total_cup_points, 0.50, na.rm = TRUE),\n            q75 = quantile(total_cup_points, 0.75, na.rm = TRUE),\n            max = max(total_cup_points, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  species   min   q25   q50   q75   max\n  <chr>   <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Arabica   0    81.2  82.5  83.7  90.6\n2 Robusta  73.8  80.2  81.5  82.5  83.8\n```\n\n\n:::\n:::\n\n\n# Boxplots\n\nFor these lecture slides, I wanted that previous table to be displayed vertically. This is a crude way to write a summary table as a vertical data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df <- coffee_df |>\n  group_by(species) |>\n  mutate(min_val = min(total_cup_points, na.rm = TRUE),\n         q25 = quantile(total_cup_points, 0.25, na.rm = TRUE),\n         q50 = quantile(total_cup_points, 0.50, na.rm = TRUE),\n         q75 = quantile(total_cup_points, 0.75, na.rm = TRUE),\n         max_val = max(total_cup_points, na.rm = TRUE)) |>\n  ungroup() |>\n  select(species, min_val, q25, q50, q75, max_val) |>\n  distinct() |>\n  rev() |> #reverse order of columns\n  t() |>   #transpose (switch rows and columns)\n  data.frame() |>\n  slice(1:5) |>\n  set_names(c(\"Arabica\", \"Robusta\"))\n```\n:::\n\n\nHere I color code the data within the `gt` framework.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df |>\n  gt() |>\n  tab_style(\n    style = list(cell_text(color = \"red\")),\n    locations = cells_body(columns = \"Arabica\")\n  ) |>\n  tab_style(\n    style = list(cell_text(color = \"blue\")),\n    locations = cells_body(columns = \"Robusta\")\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"mbfiwqsrvw\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#mbfiwqsrvw table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#mbfiwqsrvw thead, #mbfiwqsrvw tbody, #mbfiwqsrvw tfoot, #mbfiwqsrvw tr, #mbfiwqsrvw td, #mbfiwqsrvw th {\n  border-style: none;\n}\n\n#mbfiwqsrvw p {\n  margin: 0;\n  padding: 0;\n}\n\n#mbfiwqsrvw .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#mbfiwqsrvw .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#mbfiwqsrvw .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#mbfiwqsrvw .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#mbfiwqsrvw .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#mbfiwqsrvw .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#mbfiwqsrvw .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#mbfiwqsrvw .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#mbfiwqsrvw .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#mbfiwqsrvw .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#mbfiwqsrvw .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#mbfiwqsrvw .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#mbfiwqsrvw .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#mbfiwqsrvw .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#mbfiwqsrvw .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mbfiwqsrvw .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#mbfiwqsrvw .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#mbfiwqsrvw .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#mbfiwqsrvw .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mbfiwqsrvw .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#mbfiwqsrvw .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mbfiwqsrvw .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#mbfiwqsrvw .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mbfiwqsrvw .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#mbfiwqsrvw .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#mbfiwqsrvw .gt_left {\n  text-align: left;\n}\n\n#mbfiwqsrvw .gt_center {\n  text-align: center;\n}\n\n#mbfiwqsrvw .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#mbfiwqsrvw .gt_font_normal {\n  font-weight: normal;\n}\n\n#mbfiwqsrvw .gt_font_bold {\n  font-weight: bold;\n}\n\n#mbfiwqsrvw .gt_font_italic {\n  font-style: italic;\n}\n\n#mbfiwqsrvw .gt_super {\n  font-size: 65%;\n}\n\n#mbfiwqsrvw .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#mbfiwqsrvw .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#mbfiwqsrvw .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#mbfiwqsrvw .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#mbfiwqsrvw .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#mbfiwqsrvw .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#mbfiwqsrvw .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#mbfiwqsrvw .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#mbfiwqsrvw div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Arabica\">Arabica</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Robusta\">Robusta</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Arabica\" class=\"gt_row gt_right\" style=\"color: #FF0000;\">90.58</td>\n<td headers=\"Robusta\" class=\"gt_row gt_right\" style=\"color: #0000FF;\">83.75</td></tr>\n    <tr><td headers=\"Arabica\" class=\"gt_row gt_right\" style=\"color: #FF0000;\">83.67</td>\n<td headers=\"Robusta\" class=\"gt_row gt_right\" style=\"color: #0000FF;\">82.52</td></tr>\n    <tr><td headers=\"Arabica\" class=\"gt_row gt_right\" style=\"color: #FF0000;\">82.5</td>\n<td headers=\"Robusta\" class=\"gt_row gt_right\" style=\"color: #0000FF;\">81.5</td></tr>\n    <tr><td headers=\"Arabica\" class=\"gt_row gt_right\" style=\"color: #FF0000;\">81.17</td>\n<td headers=\"Robusta\" class=\"gt_row gt_right\" style=\"color: #0000FF;\">80.17</td></tr>\n    <tr><td headers=\"Arabica\" class=\"gt_row gt_right\" style=\"color: #FF0000;\"> 0.00</td>\n<td headers=\"Robusta\" class=\"gt_row gt_right\" style=\"color: #0000FF;\">73.75</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\nA *boxplot* is useful to graph a numerical variable (on the vertical axis) across a categorical variable (on the horizontal axis).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  filter(total_cup_points > 0) |> #avoid one outlier\n  ggplot() +\n  geom_boxplot(aes(x = species, y = total_cup_points, color = species)) +\n  labs(title = \"Coffee Ratings\",\n       subtitle = \"Are these quantities different?\",\n       caption = \"Source: Coffee Quality Database\",\n       x = \"species\", y = \"total points\") +\n  scale_color_manual(values = c(\"red\",\"blue\")) +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Another Example\n\n:::: {.panel-tabset}\n\n### 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  filter(!is.na(processing_method)) |>\n  group_by(processing_method) |>\n  summarize(min = min(total_cup_points, na.rm = TRUE),\n            q25 = quantile(total_cup_points, 0.25, na.rm = TRUE),\n            q50 = quantile(total_cup_points, 0.50, na.rm = TRUE),\n            q75 = quantile(total_cup_points, 0.75, na.rm = TRUE),\n            max = max(total_cup_points, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  processing_method           min   q25   q50   q75   max\n  <chr>                     <dbl> <dbl> <dbl> <dbl> <dbl>\n1 Natural / Dry              67.9  81.2  82.8  83.8  89  \n2 Other                      63.1  80.8  81.8  83.0  84.7\n3 Pulped natural / honey     80.1  82.0  82.7  83.2  86.6\n4 Semi-washed / Semi-pulped  78.8  81.5  82.5  83.6  86.1\n5 Washed / Wet               59.8  81    82.4  83.5  90.6\n```\n\n\n:::\n:::\n\n\n### 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  filter(!is.na(processing_method)) |>\n  group_by(processing_method) |>\n  mutate(min_val = min(total_cup_points, na.rm = TRUE),\n         q25 = quantile(total_cup_points, 0.25, na.rm = TRUE),\n         q50 = quantile(total_cup_points, 0.50, na.rm = TRUE),\n         q75 = quantile(total_cup_points, 0.75, na.rm = TRUE),\n         max_val = max(total_cup_points, na.rm = TRUE)) |>\n  ungroup() |>\n  select(processing_method, min_val, q25, q50, q75, max_val) |>\n  distinct() |>\n  rev() |> #reverse order of columns\n  t() |>   #transpose (switch rows and columns)\n  data.frame() |>\n  slice(1:5) |>\n  set_names(c(\"washed\", \"natural\", \"pulped\", \"semi\", \"other\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         washed natural  pulped    semi   other\nmax_val   90.58   89.00   86.58   86.08   84.67\nq75     83.5000 83.8300 83.2075 83.6425 82.9575\nq50      82.420  82.750  82.665  82.500  81.830\nq25     81.0000 81.2500 81.9550 81.5000 80.7925\nmin_val   59.83   67.92   80.08   78.75   63.08\n```\n\n\n:::\n:::\n\n\n### Boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  filter(!is.na(processing_method)) |>\n  ggplot() +\n  geom_boxplot(aes(x = processing_method, y = total_cup_points,\n                   color = processing_method)) +\n  labs(title = \"Coffee Ratings\",\n       subtitle = \"Are these quantities different?\",\n       caption = \"Source: Coffee Quality Database\",\n       x = \"\", y = \"total points\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45),\n        legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n::::\n\n# Scatterplots\n\nA **scatterplot** helps us visualize two numerical variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  filter(total_cup_points > 0) |>\n  ggplot(aes(x = acidity, y = body)) +\n  geom_point() +\n  labs(title = \"Coffee Ratings\",\n       subtitle = \"Do the data vary together?\",\n       caption = \"Source: Coffee Quality Database\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Covariance\n\n:::: {.panel-tabset}\n\n## Formula\n\nFor data $(X,Y)$ listed as $n$ data points $(x_{i}, y_{i})$, the **covariance** is defined as\n\n$$\\begin{array}{rcl}\n  \\text{Cov}(X,Y) & = & \\frac{1}{2n^{2}}\\sum_{i=1}^{n}\\sum_{j=1}^{n}(x_{i} - x_{j})(y_{i} - y_{j}) \\\\\n  ~ & = & \\text{E}[X] \\cdot \\text{E}[Y] - \\text{E}[XY] \\\\\n  \\end{array}$$\n\n## Intuition\n\n![constructive or destructive waves](constructive_destructive_waves.png)\n\n* image source: [Fissics](https://www.fizzics.org/interference-of-waves/)\n\n## Commentary\n\n* Are resultant numbers large or small?\n* Units? (e.g. \"burger-fries\")\n\n::::\n\n## Standardization\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n### z-score\n\n$$\\begin{array}{ccc}\nz & = & \\frac{x - \\bar{x}}{s} \\\\\n~ & = & \\frac{\\text{deviation}}{\\text{standard deviation}} \\\\\n\\end{array}$$\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n### Correlation\n\n$$\\begin{array}{ccc}\n  r & = & \\frac{\\sum_{i=1}^{n} (x_{i} - \\bar{x})(y_{i} - \\bar{y})}{\\sqrt{\\sum_{i=1}^{n} (x_{i} - \\bar{x})}\\sqrt{\\sum_{i=1}^{n} (y_{i} - \\bar{y})}} \\\\\n  ~ & = & \\frac{\\text{Cov}(X,Y)}{\\text{SD}(X) \\cdot \\text{SD}(Y)} \\\\\n  ~ & = & \\frac{1}{n-1}\\sum_{i=1}^{n}\\left(\\frac{x_{i}-\\bar{x}}{s_{x}}\\right)\\left(\\frac{y_{i}-\\bar{y}}{s_{y}}\\right) \\\\\n\\end{array}$$\n:::\n\n::::\n\n**Claim**: The *correlation coefficient* $r$ has a mathematical range in $[-1,1]$:\n\n$$-1 \\leq r \\leq 1$$\n\n::: {.callout-note collapse=\"true\"}\n## Proof\n\n[refer to a Calculus-based Probability course]\n:::\n\n\n# Correlation\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\nIn this course, we will simply follow the Pearson suggestions for interpreting correlation values:\n\n* $-1.0 \\leq r \\leq -0.7$: highly and negatively correlated\n* $-0.7 < r < -0.4$: slightly and negatively correlated\n* $-0.4 \\leq r \\leq 0.4$: virtually uncorrelated\n* $0.4 < r < 0.7$: slightly and positively correlated\n* $0.7 \\leq r \\leq 1.0$: highly and positively correlated\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"30%\"}\n![Karl Pearson](Karl_Pearson.png)\n:::\n\n::::\n\n## Demonstration\n\n::: {.panel-tabset}\n\n### 1\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n### 3\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### 4\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n### 5\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n:::\n\n## Examples\n\nCompute the correlation between `flavor` and `aftertaste`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(coffee_df$flavor, coffee_df$aftertaste)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8956718\n```\n\n\n:::\n:::\n\n\nCompute the correlation between `uniformity` and `clean_cup`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(coffee_df$uniformity, coffee_df$clean_cup,\n    use = \"pairwise.complete.obs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5262187\n```\n\n\n:::\n:::\n\n\nCompute the correlation between `aroma` and `sweetness`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  summarize(r = cor(aroma, sweetness,\n                    use = \"pairwise.complete.obs\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      r\n  <dbl>\n1 0.253\n```\n\n\n:::\n:::\n\n\n\n# Correlation is Not Causation\n\n* High values of $r$ can appear by coincidence\n* Even if there was some causation, how would we show the direction?\n* Popular website of examples: [Spurious Correlations](https://tylervigen.com/spurious-correlations) by Tyler Vigen\n\n\n# Simpson's Paradox\n\nNow we will visualize the data in `demo_df`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemo_df |>\nggplot(aes(x = xdata, y = ydata)) +\n  geom_point() +\n  labs(title = \"all together\")\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# compute correlation\ndemo_df |>\n  summarize(cor = cor(xdata, ydata))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         cor\n1 -0.5564614\n```\n\n\n:::\n:::\n\n\nNow let us treat the groups separately.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemo_df |>\nggplot(aes(x = xdata, y = ydata, color = group)) +\n  geom_point() +\n  labs(title = \"separate groups\")\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# compute correlation\ndemo_df |>\n  group_by(group) |>\n  summarize(cor = cor(xdata, ydata))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  group     cor\n  <chr>   <dbl>\n1 group 1 0.737\n2 group 2 0.780\n3 group 3 0.737\n4 group 4 0.830\n5 group 5 0.760\n```\n\n\n:::\n:::\n\n\n# Correlation Matrices\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  select_if(is.numeric) |>\n  cor(use = \"pairwise.complete.obs\") |>\n  corrplot.mixed(order = \"FPC\", upper = \"ellipse\")\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoffee_df |>\n  select(any_of(c(judging_categories, \"total_cup_points\"))) |>\n  cor() |>\n  corrplot.mixed(order = \"FPC\", upper = \"ellipse\")\n```\n\n::: {.cell-output-display}\n![](07_correlation_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n# Research Considerations\n\nIf correlation is not causation, then ... ?\n\n* Humanities and life sciences tend to seek high correlation values\n\n    * hint at possible causation\n    \n* Physical sciences and engineering tend to seek low correlation\n\n    * dimensionality reduction\n\n* Causation? Seek out econometrics or graduate studies\n\n\n# Precept 4\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n![NJ train map](NJ_rail_map.png)\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![NJ train network](NJ_rail_network.png)\n:::\n\n::::\n\n\n# Project 1\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\n* Where was the Green Party popular?\n* Where did the Libertarian Party make a dent in voting?\n* Swing counties: where should a political campaign concentrate their efforts?\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"30%\"}\n![Electoral College (2020)](elec_college_map.png)\n:::\n\n::::\n\n\n\n\n\n# Quo Vadimus?\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n* Continue to complete BLTs and precept assignments\n* Project 1:\n\n    * Assigned! Sept 23\n    * Due: Oct 2\n    \n* Exam 1: Oct 10\n* Refer to weekly announcement for more info\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Piracy and Global Warming are strongly and negatively correlated](pirates_global_warming.png)\n\n* image source: [Dr Sandy Dersham](https://donhillson.wordpress.com/2011/04/01/link-found-between-piracy-and-global-warming/)\n:::\n\n::::\n\n\n# Footnotes\n\n::: {.callout-note collapse=\"true\"}\n\n## (optional) Additional Resources\n\n* [vignette](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html) about `corrplot` by Taiyun Wei and Viliam Simko\n\n* books about causation\n\n    * [The Effect](https://theeffectbook.net/index.html) by Nick Huntington-Klein\n    * [Causal Mixtape](https://mixtape.scunning.com/) by Scott Cunningham\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 gt_0.11.0       corrplot_0.94  \n\nloaded via a namespace (and not attached):\n [1] sass_0.4.9        utf8_1.2.4        generics_0.1.3    xml2_1.3.6       \n [5] stringi_1.8.4     hms_1.1.3         digest_0.6.35     magrittr_2.0.3   \n [9] evaluate_0.24.0   grid_4.4.1        timechange_0.3.0  fastmap_1.2.0    \n[13] jsonlite_1.8.8    fansi_1.0.6       scales_1.3.0      cli_3.6.2        \n[17] rlang_1.1.4       crayon_1.5.3      bit64_4.0.5       munsell_0.5.1    \n[21] withr_3.0.1       yaml_2.3.8        tools_4.4.1       parallel_4.4.1   \n[25] tzdb_0.4.0        colorspace_2.1-1  vctrs_0.6.5       R6_2.5.1         \n[29] lifecycle_1.0.4   htmlwidgets_1.6.4 bit_4.0.5         vroom_1.6.5      \n[33] pkgconfig_2.0.3   archive_1.1.8     pillar_1.9.0      gtable_0.3.5     \n[37] glue_1.7.0        xfun_0.44         tidyselect_1.2.1  rstudioapi_0.16.0\n[41] knitr_1.48        farver_2.1.2      htmltools_0.5.8.1 labeling_0.4.3   \n[45] rmarkdown_2.27    compiler_4.4.1   \n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Example Callout Block\n\n`note`, `tip`, `warning`, `caution`, or `important`\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n:::: {.panel-tabset}\n\n\n\n::::",
    "supporting": [
      "07_correlation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}