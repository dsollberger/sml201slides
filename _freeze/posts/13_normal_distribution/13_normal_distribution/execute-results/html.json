{
  "hash": "c44280c225917063ecd069f1673ee18d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"13: Normal Distribution\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-10-24\"\nformat:\n  html:\n    toc: true\n    theme: cerulean\n---\n\n\n\n::: {.callout-note collapse=\"true\"}\n## Libraries and Helper Functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"gt\")        #great tables\nlibrary(\"janitor\")   #helps with counts and proportions\nlibrary(\"patchwork\") #side-by-side plots\nlibrary(\"tidyverse\") #tools for data wrangling and visualization\n\n# school colors\nprinceton_orange <- \"#E77500\"\nprinceton_black  <- \"#121212\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# helper function\nvnorm <- function(x, mu = 0, sigma = 1, section = \"lower\"){\n  \n  # bell curve\n  x_vals <- seq(mu - 4*sigma, mu + 4*sigma, length.out = 201)\n  y_vals <- dnorm(x_vals, mu, sigma)\n  df_for_graph <- data.frame(x_vals, y_vals)\n\n  # outline shaded regions\n  if(length(x) == 1){\n    shade_left <- rbind(c(x[1],0), df_for_graph |>\n                        filter(x_vals < x[1]))\n    shade_right <- rbind(c(x[1],0), df_for_graph |>\n                        filter(x_vals > x[1]))\n  }\n  if(length(x) == 2){\n    shade_between <- rbind(c(x[1],0),\n                       df_for_graph |>\n                         filter(x_vals > x[1] &\n                                  x_vals < x[2]),\n                       c(x[2],0))\n    shade_tails <- rbind(df_for_graph |>\n                        filter(x_vals < x[1]),\n                     c(x[1],0),\n                     c(x[2],0),\n                     df_for_graph |>\n                        filter(x_vals > x[2]))\n  }\n  \n  # compute requested probability\n  # prob_val <- case_when(\n  #   section == \"upper\" ~ round(1 - pnorm(x,mu,sigma), 4),\n  #   section == \"between\" ~ round(diff(pnorm(x,mu,sigma), 4)),\n  #   section == \"tails\" ~ round(1 - diff(pnorm(x,mu,sigma), 4)),\n  #   .default = round(pnorm(x,mu,sigma), 4)\n  # )\n  \n  if(section == \"lower\"){\n    bell_curve <- df_for_graph |>\n      ggplot(aes(x_vals, y_vals)) +\n      geom_polygon(aes(x = x_vals, y = y_vals),\n                   data = shade_left,\n                   fill = \"#E77500\",) +\n      # geom_segment(aes(x = x, y = 0,\n      #                  xend = x, yend = dnorm(x,mu,sigma))) +\n      geom_line(color = \"gray50\", linewidth = 2)\n    prob_val <- round(pnorm(x,mu,sigma), 4)\n  }\n  if(section == \"upper\"){\n    bell_curve <- df_for_graph |>\n      ggplot(aes(x_vals, y_vals)) +\n      geom_polygon(aes(x = x_vals, y = y_vals),\n                   data = shade_right,\n                   fill = \"#E77500\",) +\n      # geom_segment(aes(x = x, y = 0,\n      #                  xend = x, yend = dnorm(x,mu,sigma))) +\n      geom_line(color = \"gray50\", linewidth = 2)\n    prob_val <- 1 - round(pnorm(x,mu,sigma), 4)\n  }\n  if(section == \"between\"){\n    bell_curve <- df_for_graph |>\n      ggplot(aes(x_vals, y_vals)) +\n      geom_polygon(aes(x = x_vals, y = y_vals),\n                   data = shade_between,\n                   fill = \"#E77500\",) +\n     #  geom_segment(aes(x = x[1], y = 0,\n     #                   xend = x[1], yend = dnorm(x[1],mu,sigma)))\n     # +\n     #  geom_segment(aes(x = x[2], y = 0,\n     #                   xend = x[2], yend = dnorm(x[2],mu,sigma))) +\n      geom_line(color = \"gray50\", linewidth = 2)\n    prob_val <- round(diff(pnorm(x,mu,sigma)), 4)\n  }\n  if(section == \"tails\"){\n    bell_curve <- df_for_graph |>\n      ggplot(aes(x_vals, y_vals)) +\n      geom_polygon(aes(x = x_vals, y = y_vals),\n                   data = shade_tails,\n                   fill = \"#E77500\",) +\n     #  geom_segment(aes(x = x[1], y = 0,\n     #                   xend = x[1], yend = dnorm(x[1],mu,sigma)))\n     # +\n     #  geom_segment(aes(x = x[2], y = 0,\n     #                   xend = x[2], yend = dnorm(x[2],mu,sigma))) +\n      geom_line(color = \"gray50\", linewidth = 2)\n    prob_val <- round(1 - diff(pnorm(x,mu,sigma)), 4)\n  }\n  \n  # plot bell curve\n  bell_curve + \n    labs(subtitle = paste0(\"Probability: \", prob_val),\n         caption = \"SML 201\", y = \"\") +\n    theme_minimal()\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngraph_noise <- function(x,y){\n  this_df <- data.frame(x = x, y = y)\n  lin_fit <- lm(y ~ x, data = this_df)\n  coef_det <- summary(lin_fit)$adj.r.squared\n  \n  this_df |>\n    ggplot(aes(x,y)) +\n    geom_point(color = princeton_orange) +\n    geom_smooth(formula = \"y ~ x\",\n                method = \"lm\",\n                se = TRUE) +\n    labs(title = \"The Signal and the Noise\",\n         subtitle = paste0(\"Coefficient of Determination: \", round(coef_det, 4)),\n         caption = \"SML 201\") +\n    theme_minimal()\n}\n```\n:::\n\n\n\n:::\n\n# SML 201\n\n## Start\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n* **Goal**: Introduce social science\n\n* **Objective**: Compute probabilities with the normal distribution\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"40%\"}\n\n\n:::\n\n::::\n\n\n# Scenario: Taco versus Sandwich\n\n::::: {.panel-tabset}\n\n## Scenario\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nThe undergraduates at Princeton are choosing an official food item, and the two remaining candidates are \"tacos\" and \"sandwiches\".  Suppose also that with regards to prior events, some residential colleges are allotted more delegates than others.\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Tacos or Sandwiches?](taco_sandwich.png)\n\n* image credit: El Pollo Norte√±o\n:::\n\n::::\n\n## Voter Info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(201)\ncollege <- c(\"Butler\", \"Forbes\", \"Mathey\", \"New College West\", \"Rockefeller\", \"Whitman\", \"Yeh College\")\nn <- length(college)\ndelegates <- sample(11:20, size = n, replace = FALSE)\ntaco_prop <- round(runif(n), 2)\n\n# if you want to experiment with this example later, you can explicitly set the weights here\n# college <- c(\"Butler\", \"Forbes\", \"Mathey\", \"New College West\", \"Rockefeller\", \"Whitman\", \"Yeh College\")\n# delegates <- c(13, 16, 17, 12, 11, 15, 18)\n# taco_prop <- c(27, 10, 29, 57, 68, 61, 47) / 100\n\ndf_election <- data.frame(\n  college, delegates, taco_prop\n)\n\ndf_election <- df_election |>\n  mutate(sandwich_prop = 1 - taco_prop)\n```\n:::\n\n\n\n## Simulate One Election\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(201)\ndf_election <- df_election |>\n  rowwise() |>\n  mutate(picks = sample(c(\"Taco\", \"Sandwich\"), \n                        size = 1,\n                        prob = c(taco_prop, sandwich_prop)))\n\ndf_election <- df_election |>\n  mutate(picks_bool = ifelse(picks == \"Taco\", 1, 0))\n\ntaco_share <- sum(df_election$delegates * df_election$picks_bool) / sum(df_election$delegates)\n\nprint(taco_share)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.254902\n```\n\n\n:::\n:::\n\n\n\n## Classify Result\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nelection_result <- case_when(\n  taco_share < 0.5 ~ \"Sandwich Won\",\n  taco_share > 0.5 ~ \"Taco Won\",\n  .default = \"tie\"\n)\n\nprint(election_result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Sandwich Won\"\n```\n\n\n:::\n:::\n\n\n\n:::::\n\n\n# Simulation\n\nSo far, we have merely one observation.  What if we wanted to address broader questions like\n\n* How often would taco win in this scenario?\n* What is the variance (or standard deviation) for the `taco_share`?\n\n## Frequentist Probability\n\n* **Frequentist probability**: If we could repeat an experiment infinitely many iterations, what would the proportion be?\n\n\n## for loops\n\nA common programming tool is the **for loop**. We tend to use letters $i$, $j$, and $k$ historically as *counter* variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN <- 7 #number of iterations\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:N){\n  print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:N){\n  print(i^2)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n[1] 4\n[1] 9\n[1] 16\n[1] 25\n[1] 36\n[1] 49\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:N){\n  print(LETTERS[1:i])\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"A\"\n[1] \"A\" \"B\"\n[1] \"A\" \"B\" \"C\"\n[1] \"A\" \"B\" \"C\" \"D\"\n[1] \"A\" \"B\" \"C\" \"D\" \"E\"\n[1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\"\n[1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(i in 1:N){\n  print(paste0(\"When i = \", i, \" , the first \", i, \" LETTERS are \", \n         paste0(LETTERS[1:i], collapse = \"\")))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"When i = 1 , the first 1 LETTERS are A\"\n[1] \"When i = 2 , the first 2 LETTERS are AB\"\n[1] \"When i = 3 , the first 3 LETTERS are ABC\"\n[1] \"When i = 4 , the first 4 LETTERS are ABCD\"\n[1] \"When i = 5 , the first 5 LETTERS are ABCDE\"\n[1] \"When i = 6 , the first 6 LETTERS are ABCDEF\"\n[1] \"When i = 7 , the first 7 LETTERS are ABCDEFG\"\n```\n\n\n:::\n:::\n\n\n\n\n## Election Simulation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nN <- 1337 #number of simulations\n\nstart_time <- Sys.time()\n\n# pre-allocate space for storing results\ntaco_share_vec <- rep(NA, N)\n\nfor(i in 1:N){\n  df_election <- df_election |>\n  rowwise() |>\n    mutate(picks = sample(c(\"Taco\", \"Sandwich\"), \n                          size = 1,\n                          prob = c(taco_prop, sandwich_prop)))\n  df_election <- df_election |>\n    mutate(picks_bool = ifelse(picks == \"Taco\", 1, 0))\n  \n  taco_share_vec[i] <- sum(df_election$delegates * df_election$picks_bool) / sum(df_election$delegates)\n}\n\ndf_simulation <- data.frame(iter = 1:N, taco_share_vec)\n\nprint(Sys.time() - start_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime difference of 6.510849 secs\n```\n\n\n:::\n:::\n\n\n\n::: {.callout-note collapse=\"true\"}\n## On the computer processing of simulations\n\nIf your computer is older\n\n* took a while to draw maps\n* took a while to produce network visuals\n\nyou may reduce the number of iterations from 1337 to 201 (for example).\n:::\n\n\n## Visualize the Simulation\n\nNow, `taco_share_vec` is itself a numerical variable, so we can visualize its distribution with a histogram.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_simulation |>\n  ggplot(aes(x = taco_share_vec)) +\n  geom_histogram(bins = 20, color = princeton_black, fill = princeton_orange) +\n  geom_vline(xintercept = 0.5, color = \"#2A668F\", \n             linewidth = 3, linetype = 3) +\n  labs(title = \"Taco versus Sandwich!\",\n       subtitle = \"Simulated delegation voting of the residential colleges\",\n       caption = \"SML 201\",\n       x = \"taco vote share\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## Simulation Statistics\n\nTo wrap up this example,\n\n* \"Taco\" had this vote share on average:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(df_simulation$taco_share_vec)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4101442\n```\n\n\n:::\n:::\n\n\n\nTo compute how often \"Taco\" would win probabilistically, we could\n\n* count the iterations where `taco_share_vec > 0.50`\n* divide by the number of iterations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(df_simulation$taco_share_vec > 0.50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2984293\n```\n\n\n:::\n:::\n\n\n\nPreview: the **standard error** is the standard deviation of a sampling distribution.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(df_simulation$taco_share_vec)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1734641\n```\n\n\n:::\n:::\n\n\n\n\n## Density Plot\n\nNow, `taco_share_vec` is itself a numerical variable, so we can visualize its distribution with a denisty plot.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_simulation |>\n  ggplot(aes(x = taco_share_vec)) +\n  geom_density(color = princeton_black, fill = princeton_orange) +\n  geom_vline(xintercept = 0.5, color = \"#2A668F\", \n             linewidth = 3, linetype = 3) +\n  labs(title = \"Taco versus Sandwich!\",\n       subtitle = \"Simulated delegation voting of the residential colleges\",\n       caption = \"SML 201\",\n       x = \"taco vote share\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n# Normal Distribution\n\n:::{.callout-note}\n## General Normal Distribution\n\nWhen we model applications with $X \\sim N(\\mu, \\sigma^{2})$, by applying the $z$-score transformation \n\n$$z = \\frac{x - \\mu}{\\sigma}$$\n\nthe normal distribution has probability density function \n\n$$\\text{PDF: } f(x; \\mu, \\sigma) = \\frac{1}{\\sigma\\sqrt{2\\pi}} \\cdot e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^{2}}$$\n\nand cumulative distribution function\n\n$$F(x) = \\Phi\\left(\\frac{x-\\mu}{\\sigma}\\right) = \\frac{1}{2}\\left[1 + \\text{erf}\\left(\\frac{x-\\mu}{\\sigma\\sqrt{2}}\\right)\\right]$$\n\n$$~$$\n\nR code: `pnorm(x, mu, sd)`\n:::\n\n## Examples\n\n::::: {.panel-tabset}\n\n## Fewer\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nSuppose that the incubation period---that is, the time between being infected with the virus and showing symptoms---for Covid-19  is normally distributed with a mean of 8 days and a standard deviation of 3 days. Find the probability that a randomly selected case demonstrated symptoms in fewer than 7 days.\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Covid-19](covid_19_molecule.png)\n\n* image credit: University of Chicago\n* `pnorm(7, 8, 3)`\n* `vnorm(7, 8, 3)`\n:::\n\n::::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n## More\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nGirl Scout Thin Mint cookies have a mean size of 0.25 ounces. Find the probability that one randomly selected cookie has a size of more than 0.27 ounces if the standard  deviation is 0.03 ounces. Assume a normal distribution.\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Thin Mints](girl_scouts_thin_mints.png)\n\n* `pnorm(0.27, 0.25, 0.03, lower.tail = FALSE)`\n* `vnorm(0.27, 0.25, 0.03, section = \"upper\")`\n:::\n\n::::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\n## Between\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nThe cones in the eye detect light. The absorption rate of cones is normally distributed.  In  particular, the ‚Äúgreen‚Äù cones have a mean of 535 nanometers and a standard deviation of 65 nanometers.  If an incoming ray of light has wavelengths between 550 and 575 nanometers, calculate the percentage of that ray of light that will be absorbed by the green cones.\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![eye cones](eye_cones.png)\n\n* `pnorm(575, 535, 65) - pnorm(550, 535, 65)`\n* `vnorm(c(550, 575), 535, 65, section = \"between\")`\n:::\n\n::::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n## Characterize\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nSuppose that the number of french fries in the batches at In-n-Out are normally distributed with a mean of 42 french fries and a standard deviation of 3.7 french fries.  Your friend tells you that the In-n-Out employee is flirting with you if you end up with a french fry count in the top 5 percent. How should we characterize the top 5 percent of french fries?\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Double Double](in_n_out_meme.png)\n\n* `qnorm(0.95, 42, 3.7)`\n* `vnorm(qnorm(0.95, 42, 3.7), 42, 3.7, section = \"upper\")`\n:::\n\n::::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n\n:::::\n\n\n# Intuition\n\nIn order to help students build intuition about the normal distribution, we statistics teachers like to say the following 3 statements about the standard normal distribution ($\\mu = 0$, $\\sigma = 1$).\n\n::::: {.panel-tabset}\n\n## one SD\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(c(-1,1), 0, 1, section = \"between\") +\n  labs(title = \"About 68 percent of data falls\\nwithin one standard deviation of the mean\",\n       x = \"z\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n## 2 SD\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(c(-2,2), 0, 1, section = \"between\") +\n  labs(title = \"About 95 percent of data falls\\nwithin 2 standard deviations of the mean\",\n       x = \"z\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n## 3 SD\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(c(-3,3), 0, 1, section = \"between\") +\n  labs(title = \"About 99 percent of data falls\\nwithin 3 standard deviations of the mean\",\n       x = \"z\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n:::::\n\n\n\n\n\n\n\n# Scenario: Mean Corpuscular Volume\n\nThe **mean corpusular volume** or **mean cell volume** (MCV) is the average volume of a red blood cell.  The following information was gathered, adapted, heavily rounded from the [Wikipedia page](https://en.wikipedia.org/wiki/Mean_corpuscular_volume#cite_note-2), and should not constitute medical advice.  For these mathematical examples, assume that the mean MCV is $\\mu = 90$ fL/cell with a standard deviation of $\\sigma = 5$ fL/cell and that we can apply the normal distribution based on numerous blood tests.\n\n::::: {.panel-tabset}\n\n## Reference Range\n\n[MedScape](https://emedicine.medscape.com/article/2085770-overview) says that the *reference range* for MCV is from 80 to 96 fL/cell.  Find the probability that a randomly selected blood test will fall within the reference range.  This is also known as **normocytic** size for MCV.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(c(80, 96), 90, 5, section = \"between\") +\n  labs(title = \"MCV Reference Range\",\n       x = \"fL/cell\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n## Microcytic\n\n**Microcytic anemia** describes low levels of MCV and could be caused by diseases such as thalassemia.  If microcytic anemia is diagnosed at MCV levels *below* 80 fL/cell, find the probability that a randomly selected blood test will suggest microcytic anemia.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(80, 90, 5) +\n  labs(title = \"Microcyctic anemia\",\n       x = \"fL/cell\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n## Macrocyctic\n\n**Macrocytic** or **pernicious anemia** describes high levels of MCV, and that may be caused by a nutrient deficiency (for instance, deficiency of vitamin B12).  Find the probability that a randomly selected blood test will report an MCV value *above* 96 fL/cell.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(96, 90, 5, section = \"upper\") +\n  labs(title = \"MCV Reference Range\",\n       x = \"fL/cell\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n:::::\n\n## Toward Significance\n\nTraditionally, scientists sought out extreme values among the 5 percent probability combined in the tails.  What are the MCV levels for these regions?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqnorm(c(0.025, 0.975), 90, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 80.20018 99.79982\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvnorm(qnorm(c(0.025, 0.975), 90, 5), \n      90, 5, section = \"tails\") +\n  labs(title = \"Two-Tailed Significance\",\n       x = \"fL/cell\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n\n## Simulation\n\nSuppose that we have 10000 patients whose MCV has mean $\\mu = 90$ fL/cell with a standard deviation of $\\sigma = 5$ fL/cell.  From the simulation, what percentage of patients were in each diagnosis category (reference range, microcyctic anemia, macrocyctic anemia)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_patients <- 1e5\ndf_mcv <- data.frame(\n  id = 1:num_patients,\n  mcv = rnorm(num_patients, 90, 5)\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_mcv <- df_mcv |>\n  mutate(diagnosis = case_when(\n    mcv >= 96 ~ \"macrocyctic anemia\",\n    mcv <= 80 ~ \"microcyctic anemia\",\n    .default = \"reference range\"\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# janitor package helps find proportions\ndf_mcv |>\n  tabyl(diagnosis) |>\n  adorn_totals(\"row\") |>\n  adorn_pct_formatting()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          diagnosis      n percent\n macrocyctic anemia  11542   11.5%\n microcyctic anemia   2208    2.2%\n    reference range  86250   86.2%\n              Total 100000  100.0%\n```\n\n\n:::\n:::\n\n\n\n## Exogenous\n\nSuppose that we have 10000 patients *from a different population* whose MCV has mean $\\mu = 88$ fL/cell with a standard deviation of $\\sigma = 3$ fL/cell.  From the simulation, what percentage of patients were in each diagnosis category (reference range, microcyctic anemia, macrocyctic anemia)?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_mcv <- df_mcv |>\n  mutate(mcv2 = rnorm(num_patients, 88, 3))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_mcv <- df_mcv |>\n  mutate(diagnosis2 = case_when(\n    mcv2 >= 96 ~ \"macrocyctic anemia\",\n    mcv2 <= 80 ~ \"microcyctic anemia\",\n    .default = \"reference range\"\n  ))\n\ndf_mcv |>\n  tabyl(diagnosis2) |>\n  adorn_totals(\"row\") |>\n  adorn_pct_formatting()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         diagnosis2      n percent\n macrocyctic anemia    396    0.4%\n microcyctic anemia    373    0.4%\n    reference range  99231   99.2%\n              Total 100000  100.0%\n```\n\n\n:::\n:::\n\n\n\n\n# The Signal and the Noise\n\nNow, equipped with more tools, let us return to regression and ask, \"What kind of situations are bad for linear regression?\"\n\n## Gaussian White Noise\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 201 #number of data points\nx_vals <- 1:n\ny_vals <- 0.201*x_vals + rnorm(n, 0, 3)\n\ngraph_noise(x_vals, y_vals)\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n## Polynomials\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 201 #number of data points\nx_vals <- 1:n\ny_vals <- (x_vals - n/2)^2 + rnorm(n, 0, 2*n)\n\ngraph_noise(x_vals, y_vals)\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\n## Seasonal\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 201 #number of data points\nx_vals <- 1:n\ny_vals <- sin((2*pi/75)*x_vals) + rnorm(n, 0, 0.201)\n\ngraph_noise(x_vals, y_vals)\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n\n## Heteroscedasticity\n\n*Heteroscedasticity* is a situation where we can no longer assume that the variance is the same for all observations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 201 #number of data points\nx_vals <- 1:n\ny_vals <- 0.201*x_vals + 100 +\n  rnorm(n, 0, x_vals/10)\n\ngraph_noise(x_vals, y_vals) +\n  labs(title = \"Heteroscedasticity\")\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n\n\n## Grading Curves\n\n::::: {.panel-tabset}\n\n## Setup\n\nIn a past teaching job, Derek would apply a grading curve as follows:\n\n* \"A\" to the top 9 percentile\n* \"A-\" to the next 9 percentile\n* etc.\n\n## Scenario 1\n\nSuppose that a class of Calculus students took an exam and the grading yielded a sample average of $\\bar{x} = 70$ and a sample standard deviation of $s = 15$ percentage points.  Derek's curve would look like\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n\n## Scenario 2\n\nOn a recent exam, data science students had a sample average of $\\bar{x} = 60$ and a sample standard deviation of $s = 4.97$ percentage points.  Derek's curve would look like \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n\n## Comparison\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# patchwork\np1 / p2\n```\n\n::: {.cell-output-display}\n![](13_normal_distribution_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\n## Codes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxbar <- 70\ns <- 15\n\ncurve_percentiles <- seq(28, 100, by = 9)/100\nbreakpoints <- qnorm(curve_percentiles, xbar, s)\ndf_vert <- data.frame(\n  x_breakpoints = breakpoints,\n  y_breakpoints = dnorm(breakpoints, xbar, s)\n)\n\np1 <- vnorm(qnorm(0.28, xbar, s), xbar, s, section = \"upper\") +\n  geom_segment(aes(x = x_breakpoints, \n                   y = 0,\n                   xend = x_breakpoints, \n                   yend = y_breakpoints),\n               data = df_vert) +\n  labs(title = \"Grading Curve for a Hypothetical Exam\",\n       x = \"percent\") +\n  scale_x_continuous(\n    breaks = breakpoints,\n    labels = c(\"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"\"),\n    limits = c(50, 100)\n  )\n\np1\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nxbar <- 90.38\ns <- 8.28\n\ncurve_percentiles <- seq(28, 100, by = 9)/100\nbreakpoints <- qnorm(curve_percentiles, xbar, s)\ndf_vert <- data.frame(\n  x_breakpoints = breakpoints,\n  y_breakpoints = dnorm(breakpoints, xbar, s)\n)\n\np2 <- vnorm(qnorm(0.28, xbar, s), xbar, s, section = \"upper\") +\n  geom_segment(aes(x = x_breakpoints, \n                   y = 0,\n                   xend = x_breakpoints, \n                   yend = y_breakpoints),\n               data = df_vert) +\n  labs(title = \"Grading Curve for Exam 1\",\n       x = \"percent\") +\n  scale_x_continuous(\n    breaks = breakpoints,\n    labels = c(\"C-\", \"C\", \"C+\", \"B-\", \"B\", \"B+\", \"A-\", \"A\", \"\"),\n    limits = c(50, 100)\n  )\n\np2\n```\n:::\n\n\n\n:::::\n\n\n\n\n\n\n\n\n\n# Quo Vadimus?\n\n:::: {.columns}\n\n::: {.column width=\"30%\"}\n* Precept 6\n* Group Cover Page\n* Project 2 (due Oct 30)\n* Exam 2 (December 5)\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"vjhgsyywhr\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#vjhgsyywhr table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#vjhgsyywhr thead, #vjhgsyywhr tbody, #vjhgsyywhr tfoot, #vjhgsyywhr tr, #vjhgsyywhr td, #vjhgsyywhr th {\n  border-style: none;\n}\n\n#vjhgsyywhr p {\n  margin: 0;\n  padding: 0;\n}\n\n#vjhgsyywhr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#vjhgsyywhr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vjhgsyywhr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vjhgsyywhr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vjhgsyywhr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vjhgsyywhr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vjhgsyywhr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vjhgsyywhr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vjhgsyywhr .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#vjhgsyywhr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#vjhgsyywhr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vjhgsyywhr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vjhgsyywhr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vjhgsyywhr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vjhgsyywhr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vjhgsyywhr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#vjhgsyywhr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#vjhgsyywhr .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#vjhgsyywhr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vjhgsyywhr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#vjhgsyywhr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vjhgsyywhr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vjhgsyywhr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vjhgsyywhr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vjhgsyywhr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vjhgsyywhr .gt_left {\n  text-align: left;\n}\n\n#vjhgsyywhr .gt_center {\n  text-align: center;\n}\n\n#vjhgsyywhr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vjhgsyywhr .gt_font_normal {\n  font-weight: normal;\n}\n\n#vjhgsyywhr .gt_font_bold {\n  font-weight: bold;\n}\n\n#vjhgsyywhr .gt_font_italic {\n  font-style: italic;\n}\n\n#vjhgsyywhr .gt_super {\n  font-size: 65%;\n}\n\n#vjhgsyywhr .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#vjhgsyywhr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#vjhgsyywhr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#vjhgsyywhr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#vjhgsyywhr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#vjhgsyywhr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#vjhgsyywhr .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#vjhgsyywhr .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#vjhgsyywhr div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_title gt_font_normal\" style>If this grading curve was applied</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"2\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>to Exam 1 (out of 60 points)</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"letter_grade\">letter_grade</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"breakpoints\">breakpoints</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #FFF7EC; color: #000000;\">A</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #FFF7EC; color: #000000;\">60.89</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #FED9A8; color: #000000;\">A-</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #FED9A8; color: #000000;\">58.78</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #FDBA83; color: #000000;\">B+</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #FDBA83; color: #000000;\">57.28</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #FB8A58; color: #000000;\">B</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #FB8A58; color: #000000;\">56.01</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #EE6346; color: #FFFFFF;\">B-</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #EE6346; color: #FFFFFF;\">54.85</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #D7301F; color: #FFFFFF;\">C+</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #D7301F; color: #FFFFFF;\">53.73</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #B50301; color: #FFFFFF;\">C</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #B50301; color: #FFFFFF;\">52.58</td></tr>\n    <tr><td headers=\"letter_grade\" class=\"gt_row gt_center\" style=\"background-color: #7F0000; color: #FFFFFF;\">C-</td>\n<td headers=\"breakpoints\" class=\"gt_row gt_center\" style=\"background-color: #7F0000; color: #FFFFFF;\">51.33</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"> Note: this grading curve will not be applied to SML 201</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n:::\n\n::::\n\n\n# Footnotes\n\n::: {.callout-note collapse=\"true\"}\n## (optional) Additional Resources\n\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 patchwork_1.3.0 janitor_2.2.0  \n[13] gt_0.11.1      \n\nloaded via a namespace (and not attached):\n [1] sass_0.4.9         utf8_1.2.4         generics_0.1.3     xml2_1.3.6        \n [5] lattice_0.22-6     stringi_1.8.4      hms_1.1.3          digest_0.6.35     \n [9] magrittr_2.0.3     RColorBrewer_1.1-3 evaluate_1.0.1     grid_4.4.1        \n[13] timechange_0.3.0   fastmap_1.2.0      Matrix_1.7-0       jsonlite_1.8.8    \n[17] mgcv_1.9-1         fansi_1.0.6        scales_1.3.0       cli_3.6.2         \n[21] rlang_1.1.4        splines_4.4.1      munsell_0.5.1      withr_3.0.1       \n[25] yaml_2.3.8         tools_4.4.1        tzdb_0.4.0         colorspace_2.1-1  \n[29] vctrs_0.6.5        R6_2.5.1           lifecycle_1.0.4    snakecase_0.11.1  \n[33] htmlwidgets_1.6.4  pkgconfig_2.0.3    pillar_1.9.0       gtable_0.3.5      \n[37] glue_1.7.0         xfun_0.48          tidyselect_1.2.1   rstudioapi_0.17.0 \n[41] knitr_1.48         farver_2.1.2       nlme_3.1-164       htmltools_0.5.8.1 \n[45] labeling_0.4.3     rmarkdown_2.28     compiler_4.4.1    \n```\n\n\n:::\n:::\n\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Example Callout Block\n\n`note`, `tip`, `warning`, `caution`, or `important`\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n::::: {.panel-tabset}\n\n\n\n:::::",
    "supporting": [
      "13_normal_distribution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}