{
  "hash": "b5927ac056ccc60bd07bc65607544143",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"6: Geospatial\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-09-19\"\n# format:\n#   revealjs:\n#     scrollable: true\nformat:\n  html:\n    toc: true\n---\n\n::: {.cell}\n\n:::\n\n\n\n# SML 201\n\n## Start\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* **Goal**: Visualize geospatial data\n\n* **Objective**: Merge shapefiles and data files\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n![NJ at a glance](nj_cutting_board.png)\n\n* image source: Totally Bamboo\n:::\n\n::::\n\n## Template Files\n\nMoving forward, those who want to type along with the lecture sessio will probably want to use template files\n\n1. Go to our Canvas Page --> Files --> lecture_notes\n2. *Download* today's template file\n3. Move that .qmd file into your SML 201 folder\n4. Open that template file\n\n## Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_health <- readr::read_csv(\"https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/06_geospatial/nj_health.csv\")\nnj_pop    <- readr::read_csv(\"https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/06_geospatial/nj_pop.csv\")\nnj_shp    <- readr::read_rds(\"https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/06_geospatial/nj_shp.rds\")\n```\n:::\n\n\n\n# Data\n\n::::: {.panel-tabset}\n\n## Shapefile\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nA **shapefile** has labeled geography data \t\n\n* points\n* lines\n* polygons\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n:::\n\n::::\n\n## Health\n\n[New Jersey Health Data](https://www.countyhealthrankings.org/health-data/new-jersey/data-and-resources)\n\n![New Jersey Health Data](nj_health_splash.png)\n:::::\n\n\n# Categorical\n\nLet us produce a colorful map of the counties of New Jersey.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_shp |>\n  ggplot() +\n  geom_sf(aes(fill = COUNTY)) +\n  labs(title = \"Counties of New Jersey\",\n       subtitle = \"categorical data\",\n       caption = \"SML 201\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Centroids\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the centroid of each hexagon to add the label\n# https://stackoverflow.com/questions/49343958/do-the-values-returned-by-rgeosgcentroid-and-sfst-centroid-differ\ncenters <- data.frame(\n  st_coordinates(st_centroid(nj_shp$geometry)),\n  id=nj_shp$COUNTY)\n\nnj_counties <- nj_shp |>\n  left_join(centers, by = c(\"COUNTY\" = \"id\"))\n```\n:::\n\n\n\n## Text (for labels)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_counties |>\n  ggplot() +\n  geom_sf(aes(fill = COUNTY)) +\n  geom_text(aes(x = X, y = Y, label = COUNTY)) +\n  labs(title = \"Counties of New Jersey\",\n       subtitle = \"categorical data\",\n       caption = \"SML 201\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Labels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_counties |>\n  ggplot() +\n  geom_sf(aes(fill = COUNTY)) +\n  geom_label(aes(x = X, y = Y, label = COUNTY)) +\n  labs(title = \"Counties of New Jersey\",\n       subtitle = \"categorical data\",\n       caption = \"SML 201\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Subset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_label_subset <- nj_counties |>\n  filter(COUNTY %in% c(\"MERCER\", \"SUSSEX\", \"SALEM\"))\n\nnj_counties |>\n  ggplot() +\n  geom_sf(aes(fill = COUNTY)) +\n  geom_label(aes(x = X, y = Y, label = COUNTY),\n             data = nj_label_subset,\n             size = 2) +\n  labs(title = \"Counties of New Jersey\",\n       subtitle = \"categorical data\",\n       caption = \"SML 201\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Gradient\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df <- nj_counties |>\n  mutate(COUNTY = str_to_title(COUNTY)) |>\n  left_join(nj_health, by = c(\"COUNTY\" = \"county\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df |>\n  ggplot() +\n  geom_sf(aes(fill = number_unemployed)) +\n  labs(title = \"New Jersey Unemployment\",\n       subtitle = \"numerical data\",\n       caption = \"SML 201\") +\n  scale_fill_distiller(palette = \"OrRd\",\n                       direction = 1) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## Per Capita\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df <- nj_df |>\n  left_join(nj_pop, by = c(\"COUNTY\" = \"county\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df <- nj_df |>\n  mutate(unemployed_per_cap = number_unemployed / population)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df |>\n  ggplot() +\n  geom_sf(aes(fill = unemployed_per_cap)) +\n  labs(title = \"New Jersey Unemployment\",\n       subtitle = \"per capita\",\n       caption = \"SML 201\") +\n  scale_fill_distiller(palette = \"OrRd\",\n                       direction = 1) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n# Divergent\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df <- nj_df |>\n  mutate(unemployed_scaled = scale(unemployed_per_cap))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnj_df |>\n  ggplot() +\n  geom_sf(aes(fill = unemployed_scaled)) +\n  labs(title = \"New Jersey Unemployment\",\n       subtitle = \"standardized data\",\n       caption = \"SML 201\") +\n  scale_fill_distiller(palette = \"RdYlGn\",\n                       direction = -1) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](06_geospatial_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n# Quo Vadimus?\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* Project 1:\n\n    * assigned: Sept 23\n    * due: Oct 2\n    \n* Exam 1: Oct 10\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Pork Roll vs Taylor Ham](pork_roll_Taylor_Ham.png)\n\n* poll from NJ.com\n\n:::\n\n::::\n\n\n# Footnotes\n\n::: {.callout-note collapse=\"true\"}\n## (optional) How the data sets were simplified\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# shape file\nnj_shp_raw <- sf::st_read(\"County_Boundaries_of_NJ/County_Boundaries_of_NJ.shp\")\nreadr::write_rds(nj_shp_raw, \"nj_shp.rds\") #save as R binary file\n\n# data files\nnj_health <- readxl::read_xlsx(\n  \"2024 County Health Rankings New Jersey Data - v2.xlsx\",\n  sheet = 2,\n  skip = 1) |>\n  janitor::clean_names() |>\n  filter(!is.na(county))\nnj_pop <- readxl::read_xlsx(\n  \"2024 County Health Rankings New Jersey Data - v2.xlsx\",\n  sheet = 4,\n  skip = 1) |>\n  janitor::clean_names() |>\n  filter(!is.na(county))\n\nreadr::write_csv(nj_health, \"nj_health.csv\") \nreadr::write_csv(nj_pop, \"nj_pop.csv\") \n```\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n\n## (optional) Additional Resources\n\n* more about Rcolorbrewer: [https://r-graph-gallery.com/38-rcolorbrewers-palettes.html](https://r-graph-gallery.com/38-rcolorbrewers-palettes.html)\n\n* more about joins: [http://lindsaydbrin.github.io/CREATE_R_Workshop/Lesson_-_dplyr_join.html](http://lindsaydbrin.github.io/CREATE_R_Workshop/Lesson_-_dplyr_join.html)\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 sf_1.0-17      \n\nloaded via a namespace (and not attached):\n [1] utf8_1.2.4         generics_0.1.3     class_7.3-22       KernSmooth_2.23-24\n [5] stringi_1.8.4      hms_1.1.3          digest_0.6.36      magrittr_2.0.3    \n [9] RColorBrewer_1.1-3 evaluate_0.24.0    grid_4.4.1         timechange_0.3.0  \n[13] fastmap_1.2.0      jsonlite_1.8.8     e1071_1.7-14       DBI_1.2.3         \n[17] fansi_1.0.6        scales_1.3.0       cli_3.6.3          crayon_1.5.3      \n[21] rlang_1.1.4        units_0.8-5        bit64_4.0.5        munsell_0.5.1     \n[25] withr_3.0.1        yaml_2.3.10        parallel_4.4.1     tools_4.4.1       \n[29] tzdb_0.4.0         colorspace_2.1-1   curl_5.2.1         vctrs_0.6.5       \n[33] R6_2.5.1           proxy_0.4-27       lifecycle_1.0.4    classInt_0.4-10   \n[37] bit_4.0.5          htmlwidgets_1.6.4  vroom_1.6.5        archive_1.1.8     \n[41] pkgconfig_2.0.3    pillar_1.9.0       gtable_0.3.5       glue_1.7.0        \n[45] Rcpp_1.0.13        xfun_0.46          tidyselect_1.2.1   rstudioapi_0.16.0 \n[49] knitr_1.48         farver_2.1.2       htmltools_0.5.8.1  labeling_0.4.3    \n[53] rmarkdown_2.28     compiler_4.4.1    \n```\n\n\n:::\n:::\n\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n## Example Callout Block\n\n`note`, `tip`, `warning`, `caution`, or `important`\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n:::: {.panel-tabset}\n\n\n\n::::",
    "supporting": [
      "06_geospatial_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}