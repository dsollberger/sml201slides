{
  "hash": "d9d9d5e15f36718537a0970340725828",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"3: Variance\"\nauthor: \"Derek Sollberger\"\ndate: \"2024-09-09\"\n# format:\n#   revealjs:\n#     scrollable: true\nformat:\n  html:\n    toc: true\n---\n\n::: {.cell}\n\n:::\n\n\n# SML 201\n\n## Start\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* **Goal**: Introduce the concept of variance\n\n* **Objective**: Compute range, variance, and standard deviation\n:::\n\n::: {.column width=\"10%\"}\n\n:::\n\n::: {.column width=\"45%\"}\n![Spread!](variance_splash.png)\n:::\n\n::::\n\n# Simple Example\n\nConsider the two sets below:\n\n$$\\begin{array}{rcl}\n  A & = & \\{-3, -2, -1, 0, 1, 2, 3\\} \\\\\n  B & = & \\{-9, -6, -3, 0, 3, 6, 9\\} \\\\\n\\end{array}$$\n\nWe can create these *sequences* in R using the `seq` command.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA <- seq(-3, 3)\nB <- seq(-9, 9, by = 3)\n```\n:::\n\n\n## Centrality\n\nRecall that we can compute means and medians.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n## Visualization\n\n:::: {.panel-tabset}\n\n## Viz\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_Variance_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimple_df <- data.frame(A,B)\ntitle_string <- \"Compare and Contrast: <span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>\"\n\nsimple_df |>\n  ggplot() +\n  geom_point(aes(x = A, y = 1), color = \"blue\", size = 10) +\n  geom_point(aes(x = B, y = 2), color = \"red\", size = 10) +\n  labs(title = title_string,\n       subtitle = \"What is alike?  What is different?\",\n       caption = \"SML 201\",\n       x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        plot.title = element_markdown(face = \"bold\", hjust = 0.5,size = 20),\n        plot.subtitle = element_markdown(hjust = 0.5,size = 15)) +\n  ylim(0,3)\n```\n:::\n\n\n::::\n\n# Definitions\n\nSample variance:\n\n$$s^{2} = \\frac{1}{n-1}\\sum_{i=1}^{n} (x_{i} - \\bar{x})^{2}$$\n\nSample standard deviation:\n\n$$s = \\sqrt{\\frac{1}{n-1}\\sum_{i=1}^{n} (x_{i} - \\bar{x})^{2}}$$\n\nwhere\n\n* $n$: sample size\n* $\\bar{x}$: sample mean\n\n## Aside: Range\n\nTo describe variance, an early draft was the **range**\n\n$$\\text{range}(x) = \\text{max}(x) - \\text{min}(x)$$\n\n* highly affected by outliers\n* uses only two data points\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# range in R computes min and max values\nrange(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -3  3\n```\n\n\n:::\n\n```{.r .cell-code}\nrange(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -9  9\n```\n\n\n:::\n\n```{.r .cell-code}\n# range in statistics\ndiff(range(A))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\ndiff(range(B))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 18\n```\n\n\n:::\n:::\n\n\n\n\n\n# Example: Hot Dogs\n\n:::: {.columns}\n\n::: {.column width=\"60%\"}\nEach year on Independence Day in New York City's Coney Island, Major League Eating hosts the annual [Nathan's Hot Dog Eating Contest](https://en.wikipedia.org/wiki/Nathan%27s_Hot_Dog_Eating_Contest).  Contestants vie to eat the most hot dogs (and buns) within the 10-minute time frame.  Here are recent results for the winners of the men's contest over the past 5 years.\n\n$$\\{75,76,63,62,58\\}$$\n\nWe will compute a sample variance and a sample standard deviation.\n\n$$s^{2} = \\frac{1}{n-1}\\sum_{i=1}^{n} (x_{i} - \\bar{x})^{2}$$\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"30%\"}\n![Joey Chestnut](Joey_Chestnut_Nathans.png)\n:::\n\n::::\n\n\n\n## Sample Mean\n\nRecall that we compute the sample mean of the data as\n\n$$\\bar{x} = \\frac{1}{n}\\sum_{i=1}^{n} x_{i}$$\n\n::: {.cell}\n\n```{.r .cell-code}\nH <- c(75,76,63,62,58)\nxbar <- mean(H)\n```\n:::\n\n\n## Deviations\n\nNext, we can compute deviations from the mean\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeviations <- H - xbar\ndeviations\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  8.2  9.2 -3.8 -4.8 -8.8\n```\n\n\n:::\n:::\n\n\n## Squared Deviations\n\nWe don't need negative signs in this calculations.  One way around this is to square the deviations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsq_deviations <- deviations^2\nsq_deviations\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67.24 84.64 14.44 23.04 77.44\n```\n\n\n:::\n:::\n\n\n## Tabulation\n\nSo far we have\n\n:::: {.panel-tabset}\n\n## Table\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"awpytghbup\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#awpytghbup table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#awpytghbup thead, #awpytghbup tbody, #awpytghbup tfoot, #awpytghbup tr, #awpytghbup td, #awpytghbup th {\n  border-style: none;\n}\n\n#awpytghbup p {\n  margin: 0;\n  padding: 0;\n}\n\n#awpytghbup .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#awpytghbup .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#awpytghbup .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#awpytghbup .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#awpytghbup .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#awpytghbup .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#awpytghbup .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#awpytghbup .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#awpytghbup .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#awpytghbup .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#awpytghbup .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#awpytghbup .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#awpytghbup .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#awpytghbup .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#awpytghbup .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#awpytghbup .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#awpytghbup .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#awpytghbup .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#awpytghbup .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#awpytghbup .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#awpytghbup .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#awpytghbup .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#awpytghbup .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#awpytghbup .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#awpytghbup .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#awpytghbup .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#awpytghbup .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#awpytghbup .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#awpytghbup .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#awpytghbup .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#awpytghbup .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#awpytghbup .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#awpytghbup .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#awpytghbup .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#awpytghbup .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#awpytghbup .gt_left {\n  text-align: left;\n}\n\n#awpytghbup .gt_center {\n  text-align: center;\n}\n\n#awpytghbup .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#awpytghbup .gt_font_normal {\n  font-weight: normal;\n}\n\n#awpytghbup .gt_font_bold {\n  font-weight: bold;\n}\n\n#awpytghbup .gt_font_italic {\n  font-style: italic;\n}\n\n#awpytghbup .gt_super {\n  font-size: 65%;\n}\n\n#awpytghbup .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#awpytghbup .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#awpytghbup .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#awpytghbup .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#awpytghbup .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#awpytghbup .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#awpytghbup .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#awpytghbup .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#awpytghbup div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal\" style>Nathan's Hot Dog Eating Contest</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Recent winning amounts</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"hot_dogs\">hot_dogs</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"xbar\">xbar</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"deviations\">deviations</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"sq_deviations\">sq_deviations</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">75</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">8.2</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\">67.24</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">76</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">9.2</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\">84.64</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">63</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">-3.8</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\">14.44</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">62</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">-4.8</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\">23.04</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">58</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">-8.8</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\">77.44</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"> Men's competition</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhot_dog_data <- data.frame(hot_dogs = c(75,76,63,62,58))\nhot_dog_data |>\n  mutate(xbar = mean(hot_dogs, na.rm = TRUE),\n         deviations = hot_dogs - xbar,\n         sq_deviations = deviations^2) |>\n  gt() |>\n  cols_align(align = \"center\") |>\n  tab_footnote(footnote = \"Men's competition\") |>\n  tab_header(\n    title = \"Nathan's Hot Dog Eating Contest\",\n    subtitle = \"Recent winning amounts\") |>\n  tab_style(\n    style = cell_text(weight = \"bold\"),\n    locations = cells_column_labels()\n  )\n```\n:::\n\n\n::::\n\n## Summarizing\n\nLike before, we want to summarize a list of numbers.\n\n$$s^{2} = \\frac{1}{n-1}\\sum_{i=1}^{n} (x_{i} - \\bar{x})^{2} = \\frac{266.8}{4} = 66.7$$ \n\nAt this point, the calculation has produced a **sample variance**\n\n* Why \"n-1\"?  See later session about \"Estimators\"\n* But what are the units?\n\n## Dimensional Analysis\n\n:::: {.panel-tabset}\n\n## Table\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"rnecjrqhnp\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#rnecjrqhnp table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#rnecjrqhnp thead, #rnecjrqhnp tbody, #rnecjrqhnp tfoot, #rnecjrqhnp tr, #rnecjrqhnp td, #rnecjrqhnp th {\n  border-style: none;\n}\n\n#rnecjrqhnp p {\n  margin: 0;\n  padding: 0;\n}\n\n#rnecjrqhnp .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#rnecjrqhnp .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#rnecjrqhnp .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#rnecjrqhnp .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#rnecjrqhnp .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#rnecjrqhnp .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#rnecjrqhnp .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#rnecjrqhnp .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#rnecjrqhnp .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#rnecjrqhnp .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#rnecjrqhnp .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#rnecjrqhnp .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#rnecjrqhnp .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#rnecjrqhnp .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#rnecjrqhnp .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rnecjrqhnp .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#rnecjrqhnp .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#rnecjrqhnp .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#rnecjrqhnp .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rnecjrqhnp .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#rnecjrqhnp .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rnecjrqhnp .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#rnecjrqhnp .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rnecjrqhnp .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#rnecjrqhnp .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#rnecjrqhnp .gt_left {\n  text-align: left;\n}\n\n#rnecjrqhnp .gt_center {\n  text-align: center;\n}\n\n#rnecjrqhnp .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#rnecjrqhnp .gt_font_normal {\n  font-weight: normal;\n}\n\n#rnecjrqhnp .gt_font_bold {\n  font-weight: bold;\n}\n\n#rnecjrqhnp .gt_font_italic {\n  font-style: italic;\n}\n\n#rnecjrqhnp .gt_super {\n  font-size: 65%;\n}\n\n#rnecjrqhnp .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#rnecjrqhnp .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#rnecjrqhnp .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#rnecjrqhnp .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#rnecjrqhnp .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#rnecjrqhnp .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#rnecjrqhnp .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#rnecjrqhnp .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#rnecjrqhnp div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal\" style>Nathan's Hot Dog Eating Contest</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Recent winning amounts</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"hot_dogs\">hot_dogs</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"xbar\">xbar</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"deviations\">deviations</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"sq_deviations\">sq_deviations</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">75</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">8.2</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\" style=\"color: #FF0000;\">67.24 (hot dogs)^2</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">76</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">9.2</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\" style=\"color: #FF0000;\">84.64 (hot dogs)^2</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">63</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">-3.8</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\" style=\"color: #FF0000;\">14.44 (hot dogs)^2</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">62</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">-4.8</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\" style=\"color: #FF0000;\">23.04 (hot dogs)^2</td></tr>\n    <tr><td headers=\"hot_dogs\" class=\"gt_row gt_center\">58</td>\n<td headers=\"xbar\" class=\"gt_row gt_center\">66.8</td>\n<td headers=\"deviations\" class=\"gt_row gt_center\">-8.8</td>\n<td headers=\"sq_deviations\" class=\"gt_row gt_center\" style=\"color: #FF0000;\">77.44 (hot dogs)^2</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"> Men's competition</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhot_dog_data <- data.frame(hot_dogs = c(75,76,63,62,58))\nhot_dog_data |>\n  mutate(xbar = mean(hot_dogs, na.rm = TRUE),\n         deviations = hot_dogs - xbar,\n         sq_deviations = paste(round(deviations^2,2), \n                               \"(hot dogs)^2\")) |>\n  gt() |>\n  cols_align(align = \"center\") |>\n  tab_footnote(footnote = \"Men's competition\") |>\n  tab_header(\n    title = \"Nathan's Hot Dog Eating Contest\",\n    subtitle = \"Recent winning amounts\") |>\n  tab_style(\n    style = cell_text(weight = \"bold\"),\n    locations = cells_column_labels()\n  ) |>\n  tab_style(\n    style = cell_text(color = \"red\"),\n    locations = cells_body(columns = sq_deviations)\n  )\n```\n:::\n\n\n## What?\n\nThe sample variance is\n\n$$s^{2} = 66.7 \\,(\\text{hot dogs})^{2}$$\n\n![square hot dogs?](square_hot_dog.png)\n\n* image created with Canva AI\n\n::::\n\n## Rectify\n\nIf we need to use these results in subsequent calculations, we can fix the units by taking the square root of the sample variance.  This yields the **sample standard deviation**\n\n$$s = \\sqrt{66.7} \\approx 8.1670 \\text{ hot dogs}$$\n\n\n# Simple Example Revisited\n\n:::: {.panel-tabset}\n\n## Calculations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4.666667\n```\n\n\n:::\n\n```{.r .cell-code}\nvar(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 42\n```\n\n\n:::\n:::\n\nSet B has more variance than set A\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(A)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.160247\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(B)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.480741\n```\n\n\n:::\n:::\n\n\nSet B has more variance than set A\n\n## Viz 1\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_Variance_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Viz 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_Variance_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimple_df <- data.frame(A,B)\ntitle_string <- \"<span style='color:blue'>Set A</span> versus <span style='color:red'>Set B</span>\"\nsubtitle_string <- \"<span style='color:blue'>SD(A) = 2.1602</span>, <span style='color:red'>SD(B) = 6.4807</span>\"\n\nsimple_df |>\n  ggplot() +\n  geom_point(aes(x = A, y = 1), color = \"blue\", size = 10) +\n  geom_point(aes(x = B, y = 2), color = \"red\", size = 10) +\n  labs(title = title_string,\n       subtitle = subtitle_string,\n       caption = \"SML 201\",\n       x = \"\", y = \"\") +\n  theme_minimal() +\n  theme(axis.text.y = element_blank(),\n        plot.title = element_markdown(face = \"bold\", hjust = 0.5,size = 25),\n        plot.subtitle = element_markdown(hjust = 0.5,size = 20)) +\n  ylim(0,3)\n```\n:::\n\n\n::::\n\n\n# Z-Scores\n\nOne way to rescale or **standardize** data is to use $z$-scores\n\n$$z = \\frac{x - \\bar{x}}{s}$$\n\n* $\\bar{x}$: sample mean\n* $s$: sample standard deviation\n* Units?  Number of standard deviations above/below the mean\n* Intuition: about 95% of data falls within two standard deviations of the mean\n\n# Example: Ledecky Swimming\n\n:::: {.panel-tabset}\n\n## 2024\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\n\nIn the 2024 Summer Olympic games, US swimmer Katie Ledecky won 4 medals, including gold in\n\n* 800 m freestyle\n* 1500 m freestyle\t\n\nWhich winning time was more impressive?\n\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Katie Ledecky](Ledecky2024.png)\n:::\n\n::::\n\n## Data\n\nHere is a small data set of the times from the final meets of those two events (times in seconds).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLedecky_df <- data.frame(\n  place = c(1, 2, 3, 4, 5, 6, 7, 8), \n  times800 = c(491, 492, 493, 495, 498, 502, 503, 503), \n  times1500 = c(930, 941, 941, 944, 961, 963, 964, 973))\n```\n:::\n\n\n* [source 1](https://en.wikipedia.org/wiki/Swimming_at_the_2024_Summer_Olympics_%E2%80%93_Women%27s_800_metre_freestyle)\n* [source 2](https://en.wikipedia.org/wiki/Swimming_at_the_2024_Summer_Olympics_%E2%80%93_Women%27s_1500_metre_freestyle)\n\n## 800 m\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxbar <- mean(Ledecky_df$times800)\ns <- sd(Ledecky_df$times800)\nz1 <- (491 - xbar) / s\n```\n:::\n\n\n$$z_{1} \\approx -1.21$$\n\nLedecky's 800 m time was about 1.21 standard deviations below the mean.\n\n## 1500 m\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxbar <- mean(Ledecky_df$times1500)\ns <- sd(Ledecky_df$times1500)\nz2 <- (930 - xbar) / s\n```\n:::\n\n\n$$z_{2} \\approx -1.47$$\n\nLedecky's 800 m time was about 1.47 standard deviations below the mean.\n\n## Commentary\n\nAccording to these rescaled calculations, Ledecky's 1500 m time was more impressive.\n\n\n::::\n\n\n\n\n\n\n\n\n\n\n# Side Quest: Minimizing Error\n\n## SSE\n\nFor the **sum of squared errors**, what value of $c$ will minimize the error?\n\n$$\\text{SSE} = \\sum_{i=1}^{n} (x_{i} - c)^{2}, \\quad H = \\{75,76,63,62,58\\}$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncvals <- seq(58, 76)\nSSE <- rep(NA, length(cvals))\nfor(i in 1:length(cvals)){\n  SSE[i] <- sum((H - cvals[i])^{2})\n}\nmin(SSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 267\n```\n\n\n:::\n\n```{.r .cell-code}\ncvals[which.min(SSE)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncvals <- seq(58, 76, by = 0.1)\nSSE <- rep(NA, length(cvals))\nfor(i in 1:length(cvals)){\n  SSE[i] <- sum((H - cvals[i])^{2})\n}\nmin(SSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 266.8\n```\n\n\n:::\n\n```{.r .cell-code}\ncvals[which.min(SSE)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 66.8\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(H)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 66.8\n```\n\n\n:::\n:::\n\n\n**Claim:** The sample mean minimizes the sum of squared errors.\n\n::: {.callout-note collapse=\"true\"}\n## (optional) Calculus proof\n\nFor a non-constant data set $\\{x_{i}\\}_{i=1}^{n}$, and for the sum of squared errors\n\n$$S(c) = \\sum_{i=1}^{n} (x_{i} - c)^{2}$$\n\nwe can set the derivative equal to zero\n\n$$\\begin{array}{rcl}\n  0 & = & \\frac{dS}{dc} \\\\\n  0 & = & \\frac{d}{dc} \\sum_{i=1}^{n} (x_{i} - c)^{2} \\\\\n  0 & = & \\sum_{i=1}^{n} \\frac{d}{dc} (x_{i} - c)^{2} \\\\\n  0 & = & \\sum_{i=1}^{n} 2(x_{i} - c) \\\\\n  0 & = &  2\\sum_{i=1}^{n} x_{i} - 2nc \\\\\n  0 & = &  \\sum_{i=1}^{n} x_{i} - nc \\\\\n  nc & = &  \\sum_{i=1}^{n} x_{i} \\\\\n  c & = & \\frac{1}{n}\\sum_{i=1}^{n} x_{i} \\\\\n\\end{array}$$\n\nWe recognize that the right-hand side is the sample mean.  Since the function was a concave up parabola, we know that this critical point is a global minimum.\n:::\n\n\n## Absolute Value\n\nWhat if we had used the absolute value instead? We can use a similar argument on the sum of absolute errors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncvals <- seq(58, 76, by = 0.1)\nSE <- rep(NA, length(cvals))\nfor(i in 1:length(cvals)){\n  SE[i] <- sum(abs(H - cvals[i]))\n}\nmin(SE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 31\n```\n\n\n:::\n\n```{.r .cell-code}\ncvals[which.min(SE)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 63\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(H)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 63\n```\n\n\n:::\n:::\n\n\n**Claim:** The sample median minimizes the sum of absolute errors.\n\n$$SE(c) = \\sum_{i=1}^{n} |x_{i} - c|$$\n\n::: {.callout-note collapse=\"true\"}\n## (optional) Outline of proof\n\n* argue that the summation is smallest when one of terms is zero\n* interpolate for the case when the number of observations is even\n\n:::\n\n\n# Case Study: Stock Volatility\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\nIn many financial applications, the **volatility** of a price is the standard deviation.\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Jonah Hill](Jonah_Hill_Wolf.png)\n:::\n\n::::\n\n## Data: Dow Jones Industrial Average\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* 30 popular stocks\n* Year to date\n\n     * Jan 2, 2024\n     * Sept 6, 2024\n     \n* source: Yahoo Finance\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df <- readr::read_csv(\"https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/03_variance/DOW30.csv\")\n```\n:::\n\n\n:::\n\n::::\n\n## Exploration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dow_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 11\n  ticker ref_date   price_open price_high price_low price_close   volume\n  <chr>  <date>          <dbl>      <dbl>     <dbl>       <dbl>    <dbl>\n1 AAPL   2024-01-02       187.       188.      184.        186. 82488700\n2 AAPL   2024-01-03       184.       186.      183.        184. 58414500\n3 AAPL   2024-01-04       182.       183.      181.        182. 71983600\n4 AAPL   2024-01-05       182.       183.      180.        181. 62303300\n5 AAPL   2024-01-08       182.       186.      182.        186. 59144500\n6 AAPL   2024-01-09       184.       185.      183.        185. 42841800\n# ℹ 4 more variables: price_adjusted <dbl>, ret_adjusted_prices <dbl>,\n#   ret_closing_prices <dbl>, cumret_adjusted_prices <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(dow_df, give.attr = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspc_tbl_ [5,160 × 11] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ticker                : chr [1:5160] \"AAPL\" \"AAPL\" \"AAPL\" \"AAPL\" ...\n $ ref_date              : Date[1:5160], format: \"2024-01-02\" \"2024-01-03\" ...\n $ price_open            : num [1:5160] 187 184 182 182 182 ...\n $ price_high            : num [1:5160] 188 186 183 183 186 ...\n $ price_low             : num [1:5160] 184 183 181 180 182 ...\n $ price_close           : num [1:5160] 186 184 182 181 186 ...\n $ volume                : num [1:5160] 82488700 58414500 71983600 62303300 59144500 ...\n $ price_adjusted        : num [1:5160] 185 184 181 180 185 ...\n $ ret_adjusted_prices   : num [1:5160] NA -0.00749 -0.0127 -0.00401 0.02417 ...\n $ ret_closing_prices    : num [1:5160] NA -0.00749 -0.0127 -0.00401 0.02417 ...\n $ cumret_adjusted_prices: num [1:5160] 1 0.993 0.98 0.976 1 ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dow_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"ticker\"                 \"ref_date\"               \"price_open\"            \n [4] \"price_high\"             \"price_low\"              \"price_close\"           \n [7] \"volume\"                 \"price_adjusted\"         \"ret_adjusted_prices\"   \n[10] \"ret_closing_prices\"     \"cumret_adjusted_prices\"\n```\n\n\n:::\n:::\n\n\n## Which Stocks?\n\nThe `table` command tallys the observations in a categorical variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(dow_df$ticker)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAAPL AMGN AMZN  AXP   BA  CAT  CRM CSCO  CVX  DIS  DOW   GS   HD  HON  IBM INTC \n 172  172  172  172  172  172  172  172  172  172  172  172  172  172  172  172 \n JNJ  JPM   KO  MCD  MMM  MRK MSFT  NKE   PG  TRV  UNH    V   VZ  WMT \n 172  172  172  172  172  172  172  172  172  172  172  172  172  172 \n```\n\n\n:::\n:::\n\n\n\n## Histograms\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df |>\n  filter(ticker == \"VZ\") |>\n  ggplot(aes(x = price_close)) +\n  geom_histogram() +\n  labs(title = \"Verizon stock\",\n       subtitle = \"2024 YTD\",\n       caption = \"SML 201\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](03_Variance_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df |>\n  filter(ticker == \"GS\") |>\n  ggplot(aes(x = price_close)) +\n  geom_histogram() +\n  labs(title = \"Goldman Sachs stock\",\n       subtitle = \"2024 YTD\",\n       caption = \"SML 201\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](03_Variance_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n## Z-scores\n\nSometimes, we want to `rescale` numerical columns to be able to compare them together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dow_df$price_close)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18.89   96.86  181.35  198.37  271.92  604.18 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df <- dow_df |>\n  mutate(price_scaled = scale(price_close)) #z-scores\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dow_df$price_scaled)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       V1         \n Min.   :-1.4525  \n 1st Qu.:-0.8215  \n Median :-0.1377  \n Mean   : 0.0000  \n 3rd Qu.: 0.5953  \n Max.   : 3.2842  \n```\n\n\n:::\n:::\n\n\n\n## Application 1\n\nWhich stocks have had the highest average `price_close` this year?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df |>\n  group_by(ticker) |>\n  mutate(avg_price = mean(price_close, na.rm = TRUE)) |>\n  ungroup() |>\n  select(ticker, avg_price) |>\n  distinct() |>\n  arrange(desc(avg_price))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 2\n   ticker avg_price\n   <chr>      <dbl>\n 1 UNH         516.\n 2 GS          435.\n 3 MSFT        417.\n 4 HD          354.\n 5 CAT         335.\n 6 AMGN        302.\n 7 MCD         275.\n 8 V           273.\n 9 CRM         271.\n10 AXP         227.\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n1. United Health\n2. Goldman Sachs\n3. Microsoft\n4. Home Depot\n5. Caterpillar\n\n## Volatility\n\nWhich stocks have been the most volatile this year?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df |>\n  group_by(ticker) |>\n  mutate(volatility = sd(price_close, na.rm = TRUE)) |>\n  ungroup() |>\n  select(ticker, volatility) |>\n  distinct() |>\n  arrange(desc(volatility))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 2\n   ticker volatility\n   <chr>       <dbl>\n 1 GS           43.5\n 2 UNH          37.5\n 3 CRM          22.2\n 4 CAT          21.9\n 5 AMGN         21.3\n 6 AAPL         20.8\n 7 MSFT         19.5\n 8 AXP          18.9\n 9 BA           17.5\n10 MMM          16.2\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n1. Goldman Sachs\n2. United Health\n3. Salesforce\n4. Caterpillar\n5. Amgen\n\nWhich stocks have been the most volatile this year?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df |>\n  group_by(ticker) |>\n  mutate(volatility = sd(price_close, na.rm = TRUE)) |>\n  ungroup() |>\n  select(ticker, volatility) |>\n  distinct() |>\n  arrange(volatility)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 2\n   ticker volatility\n   <chr>       <dbl>\n 1 VZ          0.973\n 2 CSCO        1.73 \n 3 DOW         2.29 \n 4 KO          3.58 \n 5 MRK         5.56 \n 6 PG          6.23 \n 7 JNJ         6.23 \n 8 CVX         6.24 \n 9 WMT         6.47 \n10 HON         6.56 \n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n1. Verizon\n2. Cisco\n3. Dow Inc\n4. Coca-Cola\n5. Merck\n\n## Line Plots\n\n:::: {.panel-tabset}\n\n## Viz\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](03_Variance_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_string <- \"<span style='color:blue'>Verizon</span> and <span style='color:red'>Goldman Sachs</span>\"\nsubtitle_string <- \"2024 stock prices\"\n\ndow_df |>\n  ggplot() +\n  geom_line(aes(x = ref_date, y = price_close),\n            color = \"blue\", linewidth = 2,\n            data = dow_df |> filter(ticker == \"VZ\")) +\n  geom_line(aes(x = ref_date, y = price_close),\n            color = \"red\", linewidth = 3,\n            data = dow_df |> filter(ticker == \"GS\")) +\n  labs(title = title_string,\n       subtitle = subtitle_string,\n       caption = \"SML 201\",\n       x = \"date\", y = \"closing price\") +\n  theme_minimal() +\n  theme(plot.title = element_markdown(face = \"bold\", hjust = 0.5,size = 25),\n        plot.subtitle = element_markdown(hjust = 0.5,size = 20))\n```\n:::\n\n\n::::\n\n\n\n\n\n## Coefficient of Variation\n\nWouldn't the most expensive stocks naturally vary more?\n\n$$\\text{CoV} = \\frac{s}{\\bar{x}}$$\n\n* $\\bar{x}$: sample mean\n* $s$: sample standard deviation\n\nWhich stocks have the highest coefficients of variation this year?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndow_df |>\n  group_by(ticker) |>\n  mutate(avg_price = mean(price_close, na.rm = TRUE)) |>\n  mutate(volatility = sd(price_close, na.rm = TRUE)) |>\n  ungroup() |>\n  select(ticker, avg_price, volatility) |>\n  distinct() |>\n  mutate(coef_var = volatility / avg_price) |>\n  arrange(desc(coef_var))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30 × 4\n   ticker avg_price volatility coef_var\n   <chr>      <dbl>      <dbl>    <dbl>\n 1 INTC        35.1       8.58   0.244 \n 2 MMM         98.2      16.2    0.165 \n 3 NKE         91.6      10.6    0.115 \n 4 AAPL       195.       20.8    0.106 \n 5 WMT         63.3       6.47   0.102 \n 6 GS         435.       43.5    0.100 \n 7 DIS        102.        9.92   0.0971\n 8 BA         187.       17.5    0.0934\n 9 AXP        227.       18.9    0.0833\n10 CRM        271.       22.2    0.0819\n# ℹ 20 more rows\n```\n\n\n:::\n:::\n\n\n1. Intel\n2. 3M\n3. Nike\n4. Apple\n5. Walmart\n\n\n# Precept 2\n\n:::: {.panel-tabset}\n\n## Objective\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* TV show scripts from `schrute` package\n* 3 measurements of sentiment analysis\n\n    * `syuzhet`\n    * `sentimentr`\n    * `sentimentAnalysis`\n    \n* areas: media arts, linguistics\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![The Office](the_office_cast.png)\n:::\n\n::::\n\n## Goal\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n![cringe](the_office_cringe.png)\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n### Can we measure cringe?\n:::\n\n::::\n\n::::\n\n\n\n# Quo Vadimus?\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n* Assignments:\n\n    * Precept 2\n    * Group Membership\n    * BLT0912\n    \n* Project 1:\n\n    * assigned: Sept 23\n    * due: Oct 2\n    \n* Exam 1: Oct 10\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n![Joey Chestnut, still a champion!](Joey_Chestnut_2024.png)\n\n* image source: Netflix\n\n:::\n\n::::\n\n\n# Footnotes\n\n::: {.callout-note collapse=\"true\"}\n## (optional) How the data set was obtained\n\nIf you want to download stock market data, this code chunk is a good start.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"yfR\")\ntoday <- Sys.Date()\nstart_date <- \"2024-01-01\"\nstock_market_example <- yf_collection_get(collection = \"SP500\", \n                                          first_date = start_date, \n                                          last_date = today)\n```\n:::\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n\n## (optional) Additional Resources\n\n\n\n:::\n\n::: {.callout-note collapse=\"true\"}\n## Session Info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14 ucrt)\nPlatform: x86_64-w64-mingw32/x64\nRunning under: Windows 11 x64 (build 22631)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=English_United States.utf8 \n[2] LC_CTYPE=English_United States.utf8   \n[3] LC_MONETARY=English_United States.utf8\n[4] LC_NUMERIC=C                          \n[5] LC_TIME=English_United States.utf8    \n\ntime zone: America/New_York\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.5     tidyr_1.3.1     tibble_3.2.1   \n [9] ggplot2_3.5.1   tidyverse_2.0.0 gt_0.11.0       ggtext_0.1.2   \n\nloaded via a namespace (and not attached):\n [1] sass_0.4.9        utf8_1.2.4        generics_0.1.3    xml2_1.3.6       \n [5] stringi_1.8.4     hms_1.1.3         digest_0.6.36     magrittr_2.0.3   \n [9] evaluate_0.24.0   grid_4.4.1        timechange_0.3.0  fastmap_1.2.0    \n[13] jsonlite_1.8.8    fansi_1.0.6       scales_1.3.0      cli_3.6.3        \n[17] rlang_1.1.4       crayon_1.5.3      commonmark_1.9.1  bit64_4.0.5      \n[21] munsell_0.5.1     withr_3.0.1       yaml_2.3.10       tools_4.4.1      \n[25] parallel_4.4.1    tzdb_0.4.0        colorspace_2.1-1  curl_5.2.1       \n[29] vctrs_0.6.5       R6_2.5.1          lifecycle_1.0.4   htmlwidgets_1.6.4\n[33] bit_4.0.5         vroom_1.6.5       archive_1.1.8     pkgconfig_2.0.3  \n[37] pillar_1.9.0      gtable_0.3.5      glue_1.7.0        Rcpp_1.0.13      \n[41] xfun_0.46         tidyselect_1.2.1  rstudioapi_0.16.0 knitr_1.48       \n[45] farver_2.1.2      htmltools_0.5.8.1 labeling_0.4.3    rmarkdown_2.28   \n[49] compiler_4.4.1    markdown_1.13     gridtext_0.1.5   \n```\n\n\n:::\n:::\n\n:::\n\n\n:::: {.columns}\n\n::: {.column width=\"45%\"}\n\t\n:::\n\n::: {.column width=\"10%\"}\n\t\n:::\n\n::: {.column width=\"45%\"}\n\n:::\n\n::::\n\n:::: {.panel-tabset}\n\n\n\n::::",
    "supporting": [
      "03_Variance_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}