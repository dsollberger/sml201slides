---
title: "session 3 notes"
author: "Derek Sollberger"
format: html
---

# sequences

```{r}
A <- seq(-3,3)
B <- seq(-9, 9, by = 3)
A
B
```

## centrality

```{r}
mean(A)
mean(B)
median(A)
median(B)
```

## variance

```{r}
var(A)
var(B)
```

The variance of set B is larger than the variance of set A.

## standard deviation

```{r}
sd(A)
sd(B)
```

The variance of set B is larger than the variance of set A.

# Z-scores

```{r}
Ledecky_df <- data.frame(
  place = c(1, 2, 3, 4, 5, 6, 7, 8), 
  times800 = c(491, 492, 493, 495, 498, 502, 503, 503), 
  times1500 = c(930, 941, 941, 944, 961, 963, 964, 973))
```

```{r}
z1 <- (491 - mean(Ledecky_df$times800)) / sd(Ledecky_df$times800)
z1
```

This result was 1.21 standard deviations below the mean.

```{r}
z2 <- (930 - mean(Ledecky_df$times1500)) / sd(Ledecky_df$times1500)
z2
```

This result was 1.47 standard deviations below the mean.

Comparing the sizes, the result for the 1500 m race was more impressive.


# Volatility

```{r}
library("tidyverse")
dow_df <- readr::read_csv("https://raw.githubusercontent.com/dsollberger/sml201slides/main/posts/03_variance/DOW30.csv")
```

## exploration

```{r}
head(dow_df)
```

```{r}
tail(dow_df)
```

```{r}
str(dow_df, give.attr = FALSE)
```

```{r}
colnames(dow_df)
```

## Which stocks?

`table` tallies the amounts in a categorical variable

```{r}
table(dow_df$ticker)
```

## Histograms

A histogram shows us the *distribution* of a numerical variable.

```{r}
dow_df |>
  filter(ticker == "VZ") |>
  ggplot(aes(x = price_close)) +
  geom_histogram() +
  labs(title = "Verison Stock",
       subtitle = "2024 prices",
       caption = "SML 201")
```

```{r}
dow_df |>
  filter(ticker == "GS") |>
  ggplot(aes(x = price_close)) +
  geom_histogram() +
  labs(title = "Goldman Sachs Stock",
       subtitle = "2024 prices",
       caption = "SML 201")
```

## Z-scores

Sometimes we want to *rescale* numerical columns to be able to compare them together.

```{r}
summary(dow_df$price_close)
```

```{r}
dow_df <- dow_df |>
  #mutate attachs a new column
  mutate(price_scaled = scale(price_close))
```

```{r}
summary(dow_df$price_scaled)
```


# Applications

Which stocks have had the highest average `price_close` this year?

```{r}
df2 <- dow_df |>
  group_by(ticker) |>
  mutate(avg_price = mean(price_close)) |>
  ungroup() |>
  select(ticker, avg_price) |>
  distinct() |>
  arrange(desc(avg_price))
```

Which stocks had the most volatility over the past year?

```{r}
dow_df |>
  group_by(ticker) |>
  mutate(volatility = sd(price_close)) |>
  ungroup() |>
  select(ticker, volatility) |>
  distinct() |>
  arrange(desc(volatility))
```








